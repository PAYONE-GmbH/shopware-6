(function(){var e,t,n,a,i,r,o,s,l,d,p,c,u={820:function(){try{Shopware.Service("privileges").addPrivilegeMappingEntry({category:"additional_permissions",parent:null,key:"Payone",roles:{payone_order_management:{privileges:["payone_order_management","payone_payment_order_transaction_data:read","payone_payment_order_transaction_data:update","payone_payment_order_action_log:read","payone_payment_order_action_log:create","payone_payment_webhook_log:read","payone_payment_notification_forward:read","payone_payment_notification_forward:create"],dependencies:[]},payone_configuration:{privileges:["system_config:read","system_config:create","system_config:update","system_config:delete","currency:read","sales_channel:read","payone:configuration"],dependencies:[]},payone_webhook_forward:{privileges:["payone_payment_notification_target:read","payone_payment_notification_target:create","payone_payment_notification_target:update","payone_payment_notification_target:delete","payone:manage_webhook_forwards"],dependencies:[]},payone_webhook_resend:{privileges:["payone_webhook_resend"],dependencies:[]}}})}catch(e){}},266:function(){let{Application:e}=Shopware,t=Shopware.Classes.ApiService;class n extends t{constructor(e,t,n="payone_payment"){super(e,t,n)}validateApiCredentials(e){let n=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/validate-api-credentials`,{credentials:e},{headers:n}).then(e=>t.handleResponse(e))}getStateMachineTransitionActions(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/get-state-machine-transition-actions`,{headers:e}).then(e=>t.handleResponse(e))}hasApplePayCert(){let e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/check-apple-pay-cert`,{headers:e}).catch(()=>!1).then(e=>!!e)}}e.addServiceProvider("PayonePaymentSettingsService",t=>new n(e.getContainer("init").httpClient,t.loginService))},326:function(){let{Application:e}=Shopware,t=Shopware.Classes.ApiService;class n extends t{constructor(e,t,n="payone"){super(e,t,n)}requeueNotificationForward(e){let n=`_action/${this.getApiBasePath()}/requeue-forward`;return this.httpClient.post(n,e,{headers:this.getBasicHeaders()}).then(e=>t.handleResponse(e))}capturePayment(e){let n=`_action/${this.getApiBasePath()}/capture-payment`;return this.httpClient.post(n,e,{headers:this.getBasicHeaders()}).then(e=>t.handleResponse(e))}refundPayment(e){let n=`_action/${this.getApiBasePath()}/refund-payment`;return this.httpClient.post(n,e,{headers:this.getBasicHeaders()}).then(e=>t.handleResponse(e))}}e.addServiceProvider("PayonePaymentService",t=>new n(e.getContainer("init").httpClient,t.loginService))},598:function(){let{Component:e,Utils:t}=Shopware;e.extend("payone-payment-settings","sw-system-config",{inject:["PayonePaymentSettingsService"],methods:{_getShowPaymentStatusFieldsFieldName(e){return`PayonePayment.settings.${e}_show_status_mapping`},async readConfig(){this.stateMaschineOptions=await this.PayonePaymentSettingsService.getStateMachineTransitionActions().then(e=>e.data.map(e=>{let t=`payone-payment.transitionActionNames.${e.label}`,n=this.$t(t);return n===t&&(n=e.label),{id:e.value,name:n}})),await this.$super("readConfig"),this.config.forEach(e=>{let t=e.name.match(/^payment_(.*)$/),n=t?t[1]:null;n&&(this.addApiConfigurationFieldsToPaymentSettingCard(e,n),this.addPaymentStatusFieldsToPaymentSettingCard(e,n)),(e.name.startsWith("payment_")||"status_mapping"===e.name)&&(e.setShowFields=t=>{e.showFields=t,e.elements.forEach(e=>{e.hidden=!t}),this.showPaymentStatusFieldsBasedOnToggle(e)},e.setShowFields(!1))})},addApiConfigurationFieldsToPaymentSettingCard(e,n){let a=["merchantId","accountId","portalId","portalKey"],i=this.config.find(e=>"basic_configuration"===e.name),r=[];i.elements.forEach(e=>{let i=e.name.match(/\.([^.]+)$/),o=i?i[1]:null;if(!o||!a.includes(o))return;let s=t.object.cloneDeep(e);s.name=e.name.replace("."+o,"."+n+(o[0].toUpperCase()+o.slice(1))),s.config.helpText={"en-GB":"The basic configuration value is used, if nothing is entered here.","de-DE":"Es wird der Wert aus der Grundeinstellung verwendet, wenn hier kein Wert eingetragen ist."},r.push(s)}),e.elements=r.concat(e.elements)},addPaymentStatusFieldsToPaymentSettingCard(e,n){e.elements.push({config:{componentName:"sw-switch-field",label:{"en-GB":"Display state mapping configuration","de-DE":"Statusmappingkonfiguration einblenden"},helpText:{"en-GB":"If not configured the general status mapping config will be applied.","de-DE":"Sie k\xf6nnen f\xfcr jede Zahlungsart ein spezifisches Statusmapping konfigurieren. Existiert eine solche Konfiguration nicht, wird auf die allgemeine Konfiguration zur\xfcckgegriffen."}},name:this._getShowPaymentStatusFieldsFieldName(e.name)}),this.config.find(e=>"status_mapping"===e.name).elements.forEach(a=>{let i=t.object.cloneDeep(a);i.name=a.name.replace(".paymentStatus",`.${n}PaymentStatus`),e.elements.push(i)})},getElementBind(e,t){let n=this.$super("getElementBind",e,t);return(e.name.includes("PaymentStatus")||e.name.includes(".paymentStatus"))&&(n.config.options=this.stateMaschineOptions),n},getInheritWrapperBind(e){let t=this.$super("getInheritWrapperBind",e);return t.hidden=e.hidden,t},showPaymentStatusFieldsBasedOnToggle(e){let t=this.actualConfigData[this.currentSalesChannelId];if(!t)return;let n=t[this._getShowPaymentStatusFieldsFieldName(e.name)];e.elements.forEach(e=>{e.name.includes("PaymentStatus")&&(e.hidden=!n)})},emitConfig(){this.config.forEach(e=>this.showPaymentStatusFieldsBasedOnToggle(e)),this.$super("emitConfig")}}})},539:function(){let{Filter:e}=Shopware;e.register("payone_currency",(t,n,a)=>null===t?"-":(t/=100,e.getByName("currency")(t,n,a)))},3:function(e,t,n){Shopware.Component.register("payone-capture-button",()=>n.e(545).then(n.bind(n,545))),Shopware.Component.register("payone-order-items",()=>n.e(56).then(n.bind(n,56))),Shopware.Component.register("payone-payment-management",()=>n.e(663).then(n.bind(n,663))),Shopware.Component.register("payone-payment-order-action-log",()=>n.e(257).then(n.bind(n,257))),Shopware.Component.register("payone-payment-webhook-log",()=>n.e(38).then(n.bind(n,38))),Shopware.Component.register("payone-refund-button",()=>n.e(397).then(n.bind(n,397))),Shopware.Component.register("sw-order-detail-payone",()=>n.e(281).then(n.bind(n,281))),Shopware.Component.override("sw-order-detail",()=>n.e(370).then(n.bind(n,370))),Shopware.Module.register("sw-order-detail-tab-payone",{routeMiddleware(e,t){"sw.order.detail"===t.name&&t.children.push({name:"sw.order.detail.payone",path:"payone",component:"sw-order-detail-payone",meta:{parentPath:"sw.order.detail",meta:{parentPath:"sw.order.index",privilege:"order.viewer"}}}),e(t)}})}},h={};function g(e){var t=h[e];if(void 0!==t)return t.exports;var n=h[e]={id:e,exports:{}};return u[e](n,n.exports,g),n.exports}g.m=u,g.d=function(e,t){for(var n in t)g.o(t,n)&&!g.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},g.f={},g.e=function(e){return Promise.all(Object.keys(g.f).reduce(function(t,n){return g.f[n](e,t),t},[]))},g.u=function(e){return"static/js/"+({38:"f3325231b20f896fb153",56:"99116029fd5cc08b8b2e",193:"291b7df2453adb3b7d6c",257:"93ee53f5004b8e0953a3",281:"6a3212b4cf68600a8718",369:"de12faeb6c7c356ea640",370:"a6acacf23554885ed833",397:"ad5aef0569df8471b8a2",535:"3901ed09467826470de4",545:"d025cd2c5ea617156ce8",663:"319b3325013fab2d6905",723:"7576b08bffbdb610dab3",836:"17ed5bd529a49813a703",899:"dd4be5705e0d3a95092d"})[e]+".js"},g.miniCssF=function(e){return"static/css/"+e+".css"},g.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},e={},t="administration:",g.l=function(n,a,i,r){if(e[n]){e[n].push(a);return}if(void 0!==i)for(var o,s,l=document.getElementsByTagName("script"),d=0;d<l.length;d++){var p=l[d];if(p.getAttribute("src")==n||p.getAttribute("data-webpack")==t+i){o=p;break}}o||(s=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,g.nc&&o.setAttribute("nonce",g.nc),o.setAttribute("data-webpack",t+i),o.src=n),e[n]=[a];var c=function(t,a){o.onerror=o.onload=null,clearTimeout(u);var i=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),i&&i.forEach(function(e){return e(a)}),t)return t(a)},u=setTimeout(c.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=c.bind(null,o.onerror),o.onload=c.bind(null,o.onload),s&&document.head.appendChild(o)},g.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},g.p="bundles/payonepayment/",n=function(e,t,n,a){var i=document.createElement("link");return i.rel="stylesheet",i.type="text/css",i.onerror=i.onload=function(r){if(i.onerror=i.onload=null,"load"===r.type)n();else{var o=r&&("load"===r.type?"missing":r.type),s=r&&r.target&&r.target.href||t,l=Error("Loading CSS chunk "+e+" failed.\n("+s+")");l.code="CSS_CHUNK_LOAD_FAILED",l.type=o,l.request=s,i.parentNode.removeChild(i),a(l)}},i.href=t,document.head.appendChild(i),i},a=function(e,t){for(var n=document.getElementsByTagName("link"),a=0;a<n.length;a++){var i=n[a],r=i.getAttribute("data-href")||i.getAttribute("href");if("stylesheet"===i.rel&&(r===e||r===t))return i}for(var o=document.getElementsByTagName("style"),a=0;a<o.length;a++){var i=o[a],r=i.getAttribute("data-href");if(r===e||r===t)return i}},i={893:0},g.f.miniCss=function(e,t){i[e]?t.push(i[e]):0!==i[e]&&({56:1,369:1,397:1,535:1,545:1,663:1,723:1,899:1})[e]&&t.push(i[e]=new Promise(function(t,i){var r=g.miniCssF(e),o=g.p+r;if(a(r,o))return t();n(e,o,t,i)}).then(function(){i[e]=0},function(t){throw delete i[e],t}))},r={893:0},g.f.j=function(e,t){var n=g.o(r,e)?r[e]:void 0;if(0!==n){if(n)t.push(n[2]);else{var a=new Promise(function(t,a){n=r[e]=[t,a]});t.push(n[2]=a);var i=g.p+g.u(e),o=Error();g.l(i,function(t){if(g.o(r,e)&&(0!==(n=r[e])&&(r[e]=void 0),n)){var a=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;o.message="Loading chunk "+e+" failed.\n("+a+": "+i+")",o.name="ChunkLoadError",o.type=a,o.request=i,n[1](o)}},"chunk-"+e,e)}}},o=function(e,t){var n,a,i=t[0],o=t[1],s=t[2],l=0;if(i.some(function(e){return 0!==r[e]})){for(n in o)g.o(o,n)&&(g.m[n]=o[n]);s&&s(g)}for(e&&e(t);l<i.length;l++)a=i[l],g.o(r,a)&&r[a]&&r[a][0](),r[a]=0},(s=window["webpackJsonpPluginpayone-payment"]=window["webpackJsonpPluginpayone-payment"]||[]).forEach(o.bind(null,0)),s.push=o.bind(null,s.push.bind(s)),window?.__sw__?.assetPath&&(g.p=window.__sw__.assetPath+"/bundles/payonepayment/"),l=JSON.parse('{"payone-payment":{"title":"PAYONE","general":{"mainMenuItemGeneral":"PAYONE","descriptionTextModule":"Einstellungen f\xfcr PAYONE","headlines":{"ratepayProfiles":"Profile","ratepayProfileConfigurations":"Profile Konfigurationen"},"label":{"shopId":"Shop-ID","currency":"W\xe4hrung","error":"Status","invoiceCountry":"Rechnungsland","shippingCountry":"Lieferland","minBasket":"Min. Warenkorb","maxBasket":"Max. Warenkorb","reloadConfigInfo":"Profile-Konfigurationen werden beim Speichern der Plugin-Einstellungen automatisch aktualisiert."},"actions":{"addShop":"Shop-ID hinzuf\xfcgen"},"errors":{"existingShopId":"Die eingegebene ShopId existiert bereits.","emptyInputs":"Bitte f\xfcllen Sie alle Eingabefelder aus."}},"settingsForm":{"save":"Speichern","test":"API-Zugangsdaten testen","titleSuccess":"Erfolg","titleError":"Fehler","labelShowSpecificStatusMapping":"Statusmappingkonfiguration einblenden","helpTextShowSpecificStatusMapping":"Sie k\xf6nnen f\xfcr jede Zahlungsart ein spezifisches Statusmapping konfigurieren. Existiert eine solche Konfiguration nicht, wird auf die allgemeine Konfiguration zur\xfcckgegriffen.","messageSaveError":{"ratepayProfilesUpdateFailed":"Mindestens ein Ratepay Profil konnte nicht erfolgreich gespeichert werden, bitte pr\xfcfen Sie Ihre Konfiguration."},"messageTestSuccess":"Die API-Zugangsdaten wurden erfolgreich validiert.","messageTestNoTestedPayments":"Bei der Pr\xfcfung wurden keine Zahlarten getestet, weil keine der PAYONE Zahlarten aktiviert ist. Bitte aktivieren Sie mindestens eine PAYONE Zahlart unter Einstellungen --> Shop --> Zahlungsarten.","messageTestError":{"general":"Die API-Zugangsdaten konnten nicht validiert werden.","creditCard":"Die API-Zugangsdaten f\xfcr PAYONE Kreditkarte sind nicht korrekt.","prepayment":"Die API-Zugangsdaten f\xfcr PAYONE Vorkasse sind nicht korrekt.","debit":"Die API-Zugangsdaten f\xfcr PAYONE Lastschrift sind nicht korrekt.","paypalExpress":"Die API-Zugangsdaten f\xfcr PAYONE PayPal Express sind nicht korrekt.","paypal":"Die API-Zugangsdaten f\xfcr PAYONE PayPal sind nicht korrekt.","paypalV2Express":"Die API-Zugangsdaten f\xfcr PAYONE PayPal Express v2 sind nicht korrekt.","paypalV2":"Die API-Zugangsdaten f\xfcr PAYONE PayPal v2 sind nicht korrekt.","payolutionInstallment":"Die API-Zugangsdaten f\xfcr PAYONE Unzer Ratenkauf sind nicht korrekt.","payolutionInvoicing":"Die API-Zugangsdaten f\xfcr PAYONE Unzer Rechnungskauf sind nicht korrekt.","payolutionDebit":"Die API-Zugangsdaten f\xfcr PAYONE Unzer Lastschrift sind nicht korrekt.","sofort":"Die API-Zugangsdaten f\xfcr PAYONE Sofort \xdcberweisung sind nicht korrekt.","eps":"Die API-Zugangsdaten f\xfcr PAYONE eps \xdcberweisung sind nicht korrekt.","iDeal":"Die API-Zugangsdaten f\xfcr PAYONE iDEAL sind nicht korrekt.","secureInvoice":"Die API-Zugangsdaten f\xfcr PAYONE Gesicherter Rechnungskauf sind nicht korrekt.","openInvoice":"Die API-Zugangsdaten f\xfcr PAYONE Rechnungskauf sind nicht korrekt.","paydirekt":"Die API-Zugangsdaten f\xfcr PAYONE paydirekt sind nicht korrekt.","trustly":"Die API-Zugangsdaten f\xfcr PAYONE Trustly sind nicht korrekt.","applePay":"Die API-Zugangsdaten f\xfcr PAYONE Apple Pay sind nicht korrekt.","bancontact":"Die API-Zugangsdaten f\xfcr PAYONE Bancontact sind nicht korrekt.","ratepayDebit":"Die API-Zugangsdaten f\xfcr PAYONE Ratepay Lastschrift sind nicht korrekt.","ratepayInstallment":"Die API-Zugangsdaten f\xfcr PAYONE Ratepay Ratenzahlung sind nicht korrekt.","ratepayInvoicing":"Die API-Zugangsdaten f\xfcr PAYONE Ratepay Rechnungskauf sind nicht korrekt.","klarnaInvoice":"Die API-Zugangsdaten f\xfcr PAYONE Klarna Rechnung sind nicht korrekt.","klarnaDirectDebit":"Die API-Zugangsdaten f\xfcr PAYONE Klarna Sofort bezahlen sind nicht korrekt.","klarnaInstallment":"Die API-Zugangsdaten f\xfcr PAYONE Klarna Ratenkauf sind nicht korrekt.","przelewy24":"Die API-Zugangsdaten f\xfcr PAYONE Przelewy24 sind nicht korrekt.","weChatPay":"Die API-Zugangsdaten f\xfcr PAYONE WeChat Pay sind nicht korrekt.","postfinanceCard":"Die API-Zugangsdaten f\xfcr PAYONE Postfinance (Card) sind nicht korrekt.","postfinanceWallet":"Die API-Zugangsdaten f\xfcr PAYONE Postfinance (Wallet) sind nicht korrekt.","alipay":"Die API-Zugangsdaten f\xfcr PAYONE Alipay sind nicht korrekt.","securedInvoice":"Die API-Zugangsdaten f\xfcr PAYONE Gesicherter Rechnungskauf sind nicht korrekt.","securedInstallment":"Die API-Zugangsdaten f\xfcr PAYONE Gesicherter Ratenkauf sind nicht korrekt.","securedDirectDebit":"Die API-Zugangsdaten f\xfcr PAYONE Gesicherte Lastschrift sind nicht korrekt.","amazonPay":"Die API-Zugangsdaten f\xfcr PAYONE Amazon Pay sind nicht korrekt.","amazonPayExpress":"Die API-Zugangsdaten f\xfcr PAYONE Amazon Pay sind nicht korrekt."}},"supportModal":{"menuButton":"Support","title":"Wie k\xf6nnen wir Ihnen helfen?","documentation":{"description":"Lesen Sie unsere Online-Dokumentation","button":"Dokumentation"},"support":{"description":"Kontaktieren Sie unseren Support","button":"Technischer Support"},"repository":{"description":"Melden Sie Fehler und Verbesserungen","button":"GitHub"},"testdata":{"description":"Erstellen Sie hier Ihre pers\xf6nlichen Testdaten","button":"Testdaten"}},"applePay":{"cert":{"notification":"F\xfcr die Nutzung von ApplePay ist ein Zertifikat/Key-Paar zur Authentifizierung des Merchants erforderlich. Die Anlage eines solchen Zertifikats wird hier beschrieben:<br />\\n                            <a href=\\"https://docs.payone.com/display/public/PLATFORM/Special+Remarks+-+Apple+Pay#SpecialRemarks-ApplePay-Onboarding\\" target=\\"_blank\\">https://docs.payone.com/display/public/PLATFORM/Special+Remarks+-+Apple+Pay#SpecialRemarks-ApplePay-Onboarding</a><br/><br/>\\n\\n                            Erstellen Sie im Anschluss unter Verwendung des folgenden Befehls eine PEM-Datei des Zertifikates:<br />\\n                            <pre>openssl x509 -inform der -in merchant_id.cer -out merchant_id.pem</pre><br/>\\n                            Hinterlegen Sie das Zertifikat <b>(merchant_id.pem)</b> und den Key <b>(merchant_id.key)</b> in folgendem Verzeichnis:<br/>\\n                            <pre>%shopwareRoot%/config/apple-pay-cert</pre>"}},"transitionActionNames":{"cancel":"Stornieren","complete":"Abschlie\xdfen","pay":"Bezahlen","pay_partially":"Teilweise bezahlen","process":"Durchf\xfchren","refund":"R\xfcckerstatten","refund_partially":"Teilweise r\xfcckerstatten","remind":"Erinnern","reopen":"Wieder \xf6ffnen","retour":"Retoure","retour_partially":"Teilweise retounieren","ship":"Versenden","ship_partially":"Teilweise versenden"},"messageNotBlank":"Dieser Wert darf nicht leer sein.","error":{"transaction":{"notFound":"Es wurde keine passende Transaktion gefundend","orderNotFound":"Es wurde keine passende Bestellung gefundend"}}},"sw-privileges":{"additional_permissions":{"Payone":{"label":"PAYONE","payone_order_management":"Transaktionsmanagement","payone_configuration":"Konfiguration","payone_webhook_forward":"Webhook Weiterleitung Verwaltung","payone_webhook_resend":"Webhook Weiterleitung erneut senden"}}}}'),d=JSON.parse('{"payone-payment":{"title":"PAYONE","general":{"mainMenuItemGeneral":"PAYONE","descriptionTextModule":"Settings for PAYONE","headlines":{"ratepayProfiles":"Profile","ratepayProfileConfigurations":"Profile configuration"},"label":{"shopId":"Shop-ID","currency":"Currency","error":"Status","invoiceCountry":"Invoice Country","shippingCountry":"Shipping Country","minBasket":"Min. Basket","maxBasket":"Max. Basket","reloadConfigInfo":"Profile-Configuration got automatically updated during saving the plugin configuration"},"actions":{"addShop":"Add Shop-ID"},"errors":{"existingShopId":"The entered shop-id already exists.","emptyInputs":"Please fill all input fields."}},"settingsForm":{"save":"Save","test":"Test API Credentials","titleSuccess":"Success","titleError":"Error","labelShowSpecificStatusMapping":"Display state mapping configuration","helpTextShowSpecificStatusMapping":"If not configured the general status mapping config will be applied.","messageSaveError":{"ratepayProfilesUpdateFailed":"At least one Ratepay profile could not be saved successfully, please check your configuration."},"messageTestSuccess":"The API credentials were verified successfully.","messageTestNoTestedPayments":"No payment methods were tested during the check because none of the PAYONE payment methods are activated. Please activate at least one PAYONE payment method under Settings --> Shop --> Payment.","messageTestError":{"general":"The API credentials could not be verified successfully.","creditCard":"The API credentials for PAYONE Credit Card are not valid.","prepayment":"The API credentials for PAYONE Prepayment are not valid.","debit":"The API credentials for PAYONE Direct Debit are not valid.","paypalExpress":"The API credentials for PAYONE PayPal Express are not valid.","paypal":"The API credentials for PAYONE PayPal are not valid.","paypalV2Express":"The API credentials for PAYONE PayPal Express v2 are not valid.","paypalV2":"The API credentials for PAYONE PayPal v2 are not valid.","payolutionInstallment":"The API credentials for PAYONE Unzer Ratenkauf are not valid.","payolutionInvoicing":"The API credentials for PAYONE Unzer Rechnungskauf are not valid.","payolutionDebit":"The API credentials for PAYONE Unzer Lastschrift are not valid.","sofort":"The API credentials for PAYONE Sofort are not valid.","eps":"The API credentials for PAYONE eps are not valid.","iDeal":"The API credentials for PAYONE iDEAL are not valid.","secureInvoice":"The API credentials for PAYONE Secure Invoice are not valid.","openInvoice":"The API credentials for PAYONE Invoice are not valid.","paydirekt":"The API credentials for PAYONE paydirekt are not valid.","trustly":"The API credentials for PAYONE Trustly are not valid.","applePay":"The API credentials for PAYONE Apple Pay are not valid.","bancontact":"The API credentials for PAYONE Bancontact payment are not valid.","ratepayDebit":"The API credentials for PAYONE Ratepay Direct Debit payment are not valid.","ratepayInstallment":"The API credentials for PAYONE Ratepay Installments payment are not valid.","ratepayInvoicing":"The API credentials for PAYONE Ratepay Open Invoice payment are not valid.","klarnaInvoice":"The API credentials for PAYONE Klarna Rechnung are not valid.","klarnaDirectDebit":"The API credentials for PAYONE Klarna Sofort bezahlen are not valid.","klarnaInstallment":"The API credentials for PAYONE Klarna Ratenkauf are not valid.","przelewy24":"The API credentials for PAYONE Przelewy24 are not valid.","weChatPay":"The API credentials for PAYONE WeChat Pay are not valid.","postfinanceCard":"The API credentials for PAYONE Postfinance (Card) are not valid.","postfinanceWallet":"The API credentials for PAYONE Postfinance (Wallet) are not valid.","alipay":"The API credentials for PAYONE Alipay are not valid.","securedInvoice":"The API credentials for PAYONE Secured Invoice are not valid.","securedInstallment":"The API credentials for PAYONE Secured Installment are not valid.","securedDirectDebit":"The API credentials for PAYONE Secured Direct Debit are not valid.","amazonPay":"The API credentials for PAYONE Amazon pay are not valid.","amazonPayExpress":"The API credentials for PAYONE Amazon pay are not valid."}},"supportModal":{"menuButton":"Support","title":"How Can We Help You?","documentation":{"description":"Read our online manual","button":"Online Manual"},"support":{"description":"Contact our technical support","button":"Tech Support"},"repository":{"description":"Report errors on GitHub","button":"GitHub"},"testdata":{"description":"Create your personal test data here","button":"Test Data"}},"applePay":{"cert":{"notification":"The ApplePay merchant authentication requires a certificate/key-pair. Further information:<br />\\n                            <a href=\\"https://docs.payone.com/display/public/PLATFORM/Special+Remarks+-+Apple+Pay#SpecialRemarks-ApplePay-Onboarding\\" target=\\"_blank\\">https://docs.payone.com/display/public/PLATFORM/Special+Remarks+-+Apple+Pay#SpecialRemarks-ApplePay-Onboarding</a><br/><br/>\\n\\n                            Create a pem-File afterwards by using the following command:<br />\\n                            <pre>openssl x509 -inform der -in merchant_id.cer -out merchant_id.pem</pre><br/>\\n                            Copy certificate <b>(merchant_id.pem)</b> and key <b>(merchant_id.key)</b> file into the following folder:<br/>\\n                            <pre>%shopwareRoot%/config/apple-pay-cert</pre>"}},"transitionActionNames":{"cancel":"Cancel","complete":"Complete","pay":"Pay","pay_partially":"Pay partially","process":"Process","refund":"Refund","refund_partially":"Refund partially","remind":"Remind","reopen":"Reopen","retour":"Retour","retour_partially":"Retour partially","ship":"Ship","ship_partially":"Ship partially"},"messageNotBlank":"This field must not be empty.","error":{"transaction":{"notFound":"No matching transaction could be found","orderNotFound":"No matching order could be found"}}},"sw-privileges":{"additional_permissions":{"Payone":{"label":"PAYONE","payone_order_management":"Transaction management","payone_configuration":"Configuration","payone_webhook_forward":"Manage webhook forwards","payone_webhook_resend":"Allow Webhook forward resend"}}}}'),g(539),g(598),Shopware.Component.register("payone-payment-plugin-icon",()=>g.e(535).then(g.bind(g,535))),Shopware.Component.register("payone-ratepay-profile-configurations",()=>g.e(723).then(g.bind(g,723))),Shopware.Component.register("payone-ratepay-profiles",()=>g.e(369).then(g.bind(g,369))),Shopware.Component.register("payone-settings",()=>g.e(899).then(g.bind(g,899))),Shopware.Module.register("payone-payment",{type:"plugin",name:"PayonePayment",title:"payone-payment.general.mainMenuItemGeneral",description:"payone-payment.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",icon:"regular-cog",snippets:{"de-DE":l,"en-GB":d},routeMiddleware(e,t){e(t)},routes:{index:{component:"payone-settings",path:"index",meta:{parentPath:"sw.settings.index",privilege:"payone:configuration"}}},settingsItem:[{name:"payone-payment",to:"payone.payment.index",label:"payone-payment.general.mainMenuItemGeneral",group:"plugins",iconComponent:"payone-payment-plugin-icon",backgroundEnabled:!1,privilege:"payone:configuration"}]}),p=JSON.parse('{"payonePayment":{"notificationTarget":{"module":{"title":"Payone Notificationweiterleitungen","buttonTitle":"Notifications"},"list":{"title":"Notificationweiterleitungen","empty":"Keine Eintr\xe4ge","buttonCreate":"Weiterleitungsziel anlegen"},"detail":{"headline":"Notificationweiterleitung","placeholder":{"url":"Url","username":"Benutzer","password":"Passwort"},"label":{"url":"Url","isBasicAuth":"Basic Auth","txactions":"txactions","buttonSave":"Speichern","buttonCancel":"Abbrechen","username":"Benutzer","password":"Passwort"}},"columns":{"url":"Url","isBasicAuth":"Basic Auth","txactions":"txactions"},"actions":{"requeue":"Erneut senden"},"messages":{"success":"Die Weiterleitung wurde erfolgreich in Auftrag gegeben."}}}}'),c=JSON.parse('{"payonePayment":{"notificationTarget":{"module":{"title":"Payone notification forward","buttonTitle":"Notifications"},"list":{"title":"Notification forward","empty":"No entries","buttonCreate":"Add new notification target"},"detail":{"headline":"Notification forward","placeholder":{"url":"Url","username":"Username","password":"Password"},"label":{"url":"Url","isBasicAuth":"Basic Auth","txactions":"txactions","buttonSave":"Save","buttonCancel":"Cancel","username":"Username","password":"Password"}},"columns":{"url":"Url","isBasicAuth":"Basic Auth","txactions":"txactions"},"actions":{"requeue":"Requeue"},"messages":{"success":"The notification forward has been successfully queued."}}}}'),Shopware.Component.register("payone-notification-target-detail",g.e(193).then(g.bind(g,193))),Shopware.Component.register("payone-notification-target-list",g.e(836).then(g.bind(g,836))),Shopware.Module.register("payone-notification-target",{type:"plugin",name:"PayoneNotificationTarget",title:"payonePayment.notificationTarget.module.title",description:"payonePayment.notificationTarget.module.title",icon:"regular-cog",snippets:{"de-DE":p,"en-GB":c},routes:{list:{component:"payone-notification-target-list",path:"list",meta:{privilege:"payone_payment_notification_target:read"}},detail:{component:"payone-notification-target-detail",path:"detail/:id",props:{default(e){return{notificationTargetId:e.params.id}}},meta:{parentPath:"payone.notification.target.list",privilege:"payone_payment_notification_target:read"}},create:{component:"payone-notification-target-detail",path:"create",meta:{parentPath:"payone.notification.target.list",privilege:"payone_payment_notification_target:create"}}}}),g(3),g(326),g(266),g(820)})();