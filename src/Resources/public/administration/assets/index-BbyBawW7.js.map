{"version":3,"file":"index-BbyBawW7.js","sources":["../../../app/administration/src/module/payone-payment/page/payone-settings/payone-settings.html.twig","../../../app/administration/src/module/payone-payment/page/payone-settings/index.js"],"sourcesContent":["{% block payone_payment %}\n    <sw-page class=\"payone-payment\">\n        {% block payone_payment_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $t('sw-settings.index.title') }}\n                    <mt-icon\n                        name=\"regular-chevron-right-xs\"\n                        size=\"16px\"\n                    ></mt-icon>\n                    {{ $t('payone-payment.title') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block payone_payment_actions %}\n            <template #smart-bar-actions>\n                {% block payone_payment_settings_actions_feedback %}\n                    <mt-button\n                        @click=\"isSupportModalOpen = true\"\n                        :disabled=\"false\"\n                        :square=\"false\"\n                        :block=\"false\"\n                        :isLoading=\"false\"\n                        variant=\"primary\"\n                        size=\"default\"\n                        ghost\n                    >\n                        {{ $t('payone-payment.supportModal.menuButton') }}\n                    </mt-button>\n                {% endblock %}\n\n                {% block payone_payment_settings_actions_notification_forward_target %}\n                    <mt-button\n                        @click=\"$router.push({ name: 'payone.notification.target.list' })\"\n                        :disabled=\"false\"\n                        :square=\"false\"\n                        :block=\"false\"\n                        :isLoading=\"false\"\n                        variant=\"secondary\"\n                        size=\"default\"\n                        v-if=\"acl.can('payone_payment_notification_target:read')\"\n                        ghost\n                    >\n                        {{ $t('payonePayment.notificationTarget.module.buttonTitle') }}\n                    </mt-button>\n                {% endblock %}\n\n                {% block payone_payment_settings_actions_test %}\n                    <sw-button-process\n                        @click=\"onTest\"\n                        :isLoading=\"isTesting\"\n                        :processSuccess=\"isTestSuccessful\"\n                        :disabled=\"isLoading\"\n                    >\n                        {{ $t('payone-payment.settingsForm.test') }}\n                    </sw-button-process>\n                {% endblock %}\n\n                {% block payone_payment_settings_actions_save %}\n                    <sw-button-process\n                        class=\"sw-settings-login-registration__save-action\"\n                        :isLoading=\"isLoading\"\n                        :processSuccess=\"isSaveSuccessful\"\n                        :disabled=\"isLoading || isTesting\"\n                        variant=\"primary\"\n                        @process-finish=\"saveFinish\"\n                        @click=\"onSave\"\n                    >\n                        {{ $t('payone-payment.settingsForm.save') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block payone_payment_settings_content %}\n            <template #content>\n                <sw-modal\n                    v-if=\"isSupportModalOpen\"\n                    @modal-close=\"isSupportModalOpen = false\"\n                    :title=\"$t('payone-payment.supportModal.title')\"\n                    class=\"payone-feedback sw-modal--large\"\n                >\n                    <sw-container columns=\"1fr 1fr 1fr 1fr\">\n                        <div class=\"payone-feedback__col\">\n                            <div class=\"payone-feedback__text\">\n                                <div class=\"payone-feedback__icon\">\n                                    <mt-icon\n                                        name=\"regular-file-text\"\n                                        size=\"32px\"\n                                    ></mt-icon>\n                                </div>\n\n                                <p class=\"payone-feedback__desc\">\n                                    {{ $t('payone-payment.supportModal.documentation.description') }}\n                                </p>\n                            </div>\n\n                            <mt-button\n                                :disabled=\"false\"\n                                variant=\"primary\"\n                                :square=\"false\"\n                                :block=\"false\"\n                                :isLoading=\"false\"\n                                link=\"https://docs.payone.com/display/public/INT/Shopware+6+Plugin\"\n                            >\n                                {{ $t('payone-payment.supportModal.documentation.button') }}\n                            </mt-button>\n                        </div>\n\n                        <div class=\"payone-feedback__col\">\n                            <div class=\"payone-feedback__text\">\n                                <div class=\"payone-feedback__icon\">\n                                    <mt-icon\n                                        name=\"regular-headset\"\n                                        size=\"32px\"\n                                    ></mt-icon>\n                                </div>\n                                <p class=\"payone-feedback__desc\">\n                                    {{ $t('payone-payment.supportModal.support.description') }}\n                                </p>\n                            </div>\n\n                            <mt-button\n                                :disabled=\"false\"\n                                variant=\"primary\"\n                                :square=\"false\"\n                                :block=\"false\"\n                                :isLoading=\"false\"\n                                link=\"mailto:tech.support@payone.com\"\n                            >\n                                {{ $t('payone-payment.supportModal.support.button') }}\n                            </mt-button>\n                        </div>\n\n                        <div class=\"payone-feedback__col\">\n                            <div class=\"payone-feedback__text\">\n                                <div class=\"payone-feedback__icon\">\n                                    <mt-icon\n                                        name=\"regular-code\"\n                                        size=\"32px\"\n                                    ></mt-icon>\n                                </div>\n\n                                <p class=\"payone-feedback__desc\">\n                                    {{ $t('payone-payment.supportModal.repository.description') }}\n                                </p>\n                            </div>\n\n                            <mt-button\n                                :disabled=\"false\"\n                                variant=\"primary\"\n                                :square=\"false\"\n                                :block=\"false\"\n                                :isLoading=\"false\"\n                                link=\"https://github.com/PAYONE-GmbH/shopware-6\"\n                            >\n                                {{ $t('payone-payment.supportModal.repository.button') }}\n                            </mt-button>\n                        </div>\n\n                        <div class=\"payone-feedback__col\">\n                            <div class=\"payone-feedback__text\">\n                                <div class=\"payone-feedback__icon\">\n                                    <mt-icon\n                                        name=\"regular-fingerprint\"\n                                        size=\"32px\"\n                                    ></mt-icon>\n                                </div>\n\n                                <p class=\"payone-feedback__desc\">\n                                    {{ $t('payone-payment.supportModal.testdata.description') }}\n                                </p>\n                            </div>\n\n                            <mt-button\n                                :disabled=\"false\"\n                                variant=\"primary\"\n                                :square=\"false\"\n                                :block=\"false\"\n                                :isLoading=\"false\"\n                                link=\"https://www.payone.com/DE-de/kampagne/ecom-testaccount\"\n                            >\n                                {{ $t('payone-payment.supportModal.testdata.button') }}\n                            </mt-button>\n                        </div>\n                    </sw-container>\n                </sw-modal>\n\n                <sw-card-view>\n                    <payone-payment-settings\n                        class=\"payone-config__wrapper\"\n                        ref=\"systemConfig\"\n                        sales-channel-switchable\n                        inherit\n                        domain=\"PayonePayment.settings\"\n                    >\n                        <template #beforeElements=\"{card, config}\">\n                            <div\n                                v-if=\"card.setShowFields !== undefined\"\n                                class=\"payone-config__collapsible-container\"\n                                v-bind:class=\"{'collapsed': !card.showFields}\"\n                            >\n                                <a\n                                    class=\"payone-config__collapsible-handle\"\n                                    @click=\"card.setShowFields(!card.showFields)\"\n                                >\n                                    <mt-icon\n                                        size=\"16px\"\n                                        v-if=\"!card.showFields\"\n                                        name=\"regular-chevron-down-xxs\"\n                                        class=\"payone-config__collapsible-handle-open\"\n                                    ></mt-icon>\n\n                                    <mt-icon\n                                        size=\"16px\"\n                                        v-if=\"card.showFields\"\n                                        name=\"regular-chevron-up-xxs\"\n                                        class=\"payone-config__collapsible-handle-close\"\n                                    ></mt-icon>\n                                </a>\n                            </div>\n\n                            <mt-banner\n                                v-if=\"card.showFields && card.name === 'payment_apple_pay' && !isApplePayCertConfigured\"\n                                variant=\"info\"\n                                appearance=\"default\"\n                                :showIcon=\"true\"\n                                :closable=\"false\"\n                            >\n                                <span\n                                    v-html=\"$t('payone-payment.applePay.cert.notification')\"\n                                ></span>\n                            </mt-banner>\n                        </template>\n                    </payone-payment-settings>\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}","import template from './payone-settings.html.twig';\nimport './style.scss';\n\nconst {Mixin} = Shopware;\n\nexport default {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    inject: ['PayonePaymentSettingsService', 'acl'],\n\n    data() {\n        return {\n            isLoading: false,\n            isTesting: false,\n            isSaveSuccessful: false,\n            isTestSuccessful: false,\n            isApplePayCertConfigured: true,\n            isSupportModalOpen: false,\n            stateMachineTransitionActions: [],\n            displayStatusMapping: {},\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    methods: {\n        createdComponent() {\n            this.PayonePaymentSettingsService.hasApplePayCert()\n                .then((result) => {\n                    this.isApplePayCertConfigured = result;\n                });\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        testFinish() {\n            this.isTestSuccessful = false;\n        },\n\n        getConfigValue(field) {\n            const actualConfig = this.$refs.systemConfig.actualConfigData;\n            const defaultConfig = actualConfig.null;\n            const salesChannelId = this.$refs.systemConfig.currentSalesChannelId;\n\n            if (salesChannelId === null) {\n                return actualConfig.null[`PayonePayment.settings.${field}`];\n            }\n\n            return actualConfig[salesChannelId][`PayonePayment.settings.${field}`]\n                || defaultConfig[`PayonePayment.settings.${field}`];\n        },\n\n        getPaymentConfigValue(field, prefix) {\n            let uppercasedField = field.charAt(0).toUpperCase() + field.slice(1);\n\n            return this.getConfigValue(prefix + uppercasedField)\n                || this.getConfigValue(field);\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n            this.$refs.systemConfig.saveAll().then((response) => {\n                this.handleRatepayProfileUpdates(response);\n                this.isSaveSuccessful = true;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onTest() {\n            this.isTesting = true;\n            this.isTestSuccessful = false;\n\n            let credentials = {};\n            this.$refs.systemConfig.config.forEach((cards) => {\n                const match = cards.name.match(/^payment_(.+)$/);\n                const paymentMethodKey = match ? match[1] : null\n                if (!paymentMethodKey) {\n                    return;\n                }\n\n                credentials[paymentMethodKey] = {\n                    merchantId: this.getPaymentConfigValue('merchantId', paymentMethodKey),\n                    accountId: this.getPaymentConfigValue('accountId', paymentMethodKey),\n                    portalId: this.getPaymentConfigValue('portalId', paymentMethodKey),\n                    portalKey: this.getPaymentConfigValue('portalKey', paymentMethodKey)\n                };\n            });\n\n            this.PayonePaymentSettingsService.validateApiCredentials(credentials).then((response) => {\n                const testCount = response.testCount;\n                const credentialsValid = response.credentialsValid;\n                const errors = response.errors;\n\n                if (credentialsValid) {\n                    this.createNotificationSuccess({\n                        title: this.$t('payone-payment.settingsForm.titleSuccess'),\n                        message: testCount > 0\n                            ? this.$t('payone-payment.settingsForm.messageTestSuccess')\n                            : this.$t('payone-payment.settingsForm.messageTestNoTestedPayments'),\n                    });\n                    this.isTestSuccessful = true;\n                } else {\n                    for (let key in errors) {\n                        if (errors.hasOwnProperty(key)) {\n                            this.createNotificationError({\n                                title: this.$t('payone-payment.settingsForm.titleError'),\n                                message: this.$t('payone-payment.settingsForm.messageTestError.' + key)\n                            });\n                            let message = errors[key];\n                            if (typeof message === 'string') {\n                                this.createNotificationError({\n                                    title: this.$t('payone-payment.settingsForm.titleError'),\n                                    message: message\n                                });\n                            }\n                        }\n                    }\n                }\n            }).catch((errorResponse) => {\n                this.createNotificationError({\n                    title: this.$t('payone-payment.settingsForm.titleError'),\n                    message: this.$t('payone-payment.settingsForm.messageTestError.general')\n                });\n            }).finally(() => {\n                this.isTesting = false;\n            });\n        },\n\n        handleRatepayProfileUpdates(response) {\n            const salesChannelId = this.$refs.systemConfig.currentSalesChannelId;\n\n            if (response.payoneRatepayProfilesUpdateResult && response.payoneRatepayProfilesUpdateResult[salesChannelId]) {\n                const resultBySalesChannel = response.payoneRatepayProfilesUpdateResult[salesChannelId];\n\n                this.$root.$emit(\n                    'payone-ratepay-profiles-update-result',\n                    resultBySalesChannel\n                );\n\n                if (!Array.isArray(resultBySalesChannel.errors)) {\n                    this.createNotificationError({\n                        title: this.$t('payone-payment.settingsForm.titleError'),\n                        message: this.$t('payone-payment.settingsForm.messageSaveError.ratepayProfilesUpdateFailed')\n                    });\n                }\n            }\n        }\n    }\n};\n"],"names":["template","Mixin","index","result","field","actualConfig","defaultConfig","salesChannelId","prefix","uppercasedField","response","credentials","cards","match","paymentMethodKey","testCount","credentialsValid","errors","key","message","errorResponse","resultBySalesChannel"],"mappings":"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"}