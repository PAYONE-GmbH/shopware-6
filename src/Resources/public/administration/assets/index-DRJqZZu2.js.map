{"version":3,"file":"index-DRJqZZu2.js","sources":["../../../app/administration/src/module/payone-notification-target/page/payone-notification-target-detail/payone-notification-target-detail.html.twig","../../../app/administration/src/module/payone-notification-target/page/payone-notification-target-detail/index.js"],"sourcesContent":["{% block payone_notification_target_detail %}\n    <sw-page class=\"payone-notification-target-detail\">\n        {% block payone_notification_target_detail_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $t('payonePayment.notificationTarget.detail.headline') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block payone_notification_target_detail_actions %}\n            <template #smart-bar-actions>\n                {% block payone_notification_target_detail_actions_abort %}\n                    <mt-button\n                        :disabled=\"notificationTargetIsLoading\"\n                        @click=\"onCancel\"\n                        variant=\"secondary\"\n                    >\n                        {{ $t('payonePayment.notificationTarget.detail.label.buttonCancel') }}\n                    </mt-button>\n                {% endblock %}\n\n                {% block payone_notification_target_detail_actions_save %}\n                    <sw-button-process\n                        class=\"payone-notification-target-detail__save-action\"\n                        :isLoading=\"isLoading\"\n                        v-model=\"isSaveSuccessful\"\n                        :disabled=\"isLoading\"\n                        variant=\"primary\"\n                        :process-success=\"processSuccess\"\n                        @click.prevent=\"onSave\"\n                    >\n                        {{ $t('payonePayment.notificationTarget.detail.label.buttonSave') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        <template #content>\n            {% block payone_notification_target_detail_content %}\n                <sw-card-view>\n                    {% block payone_notification_target_detail_base_basic_info_card %}\n                        <mt-card\n                            position-identifier=\"payone-notification-target-detail-content\"\n                            :title=\"$t('payonePayment.notificationTarget.detail.headline')\"\n                            :isLoading=\"notificationTargetIsLoading\"\n                        >\n                            <template v-if=\"!notificationTargetIsLoading\">\n                                <sw-container\n                                    class=\"payone-notification-target-detail__container\"\n                                    columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n                                    gap=\"0 30px\"\n                                >\n                                    <div\n                                        class=\"payone-notification-target-detail__base-info-wrapper\"\n                                    >\n                                        {% block payone_notification_target_detail_base_info_field_url %}\n                                            <mt-text-field\n                                                :label=\"$t('payonePayment.notificationTarget.detail.label.url')\"\n                                                :placeholder=\"$t('payonePayment.notificationTarget.detail.placeholder.url')\"\n                                                name=\"url\"\n                                                validation=\"required\"\n                                                required\n                                                v-model=\"notificationTarget.url\"\n                                            >\n                                            </mt-text-field>\n                                        {% endblock %}\n\n                                        {% block payone_notification_target_detail_base_info_field_is_basic_auth %}\n                                            <mt-checkbox\n                                                :label=\"$t('payonePayment.notificationTarget.detail.label.isBasicAuth')\"\n                                                name=\"isBasicAuth\"\n                                                v-model:checked=\"notificationTarget.isBasicAuth\"\n                                            >\n                                            </mt-checkbox>\n                                        {% endblock %}\n\n                                        {% block payone_notification_target_detail_base_info_field_is_basic_auth_fields %}\n                                            <mt-text-field\n                                                v-if=\"notificationTarget.isBasicAuth\"\n                                                :label=\"$t('payonePayment.notificationTarget.detail.label.username')\"\n                                                :placeholder=\"$t('payonePayment.notificationTarget.detail.placeholder.username')\"\n                                                name=\"username\"\n                                                required\n                                                v-model=\"notificationTarget.username\"\n                                            >\n                                            </mt-text-field>\n\n                                            <mt-password-field\n                                                v-if=\"notificationTarget.isBasicAuth\"\n                                                :label=\"$t('payonePayment.notificationTarget.detail.label.password')\"\n                                                :placeholder=\"$t('payonePayment.notificationTarget.detail.placeholder.password')\"\n                                                name=\"password\"\n                                                required\n                                                v-model=\"notificationTarget.password\"\n                                            ></mt-password-field>\n                                        {% endblock %}\n\n                                        {% block payone_notification_target_detail_base_info_field_txactions %}\n                                            <sw-multi-select\n                                                :label=\"$t('payonePayment.notificationTarget.detail.label.txactions')\"\n                                                :options=\"txactionsOptions\"\n                                                v-model:value=\"notificationTarget.txactions\"\n                                            >\n                                            </sw-multi-select>\n                                        {% endblock %}\n                                    </div>\n                                </sw-container>\n                            </template>\n                        </mt-card>\n                    {% endblock %}\n                </sw-card-view>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}","import template from './payone-notification-target-detail.html.twig';\n\nconst {Mixin} = Shopware;\n\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': 'onSave',\n        ESCAPE: 'onCancel'\n    },\n\n    props: {\n        notificationTargetId: {\n            type: String,\n            required: false,\n            default: null\n        }\n    },\n\n    data() {\n        return {\n            notificationTarget: null,\n            isLoading: false,\n            isSaveSuccessful: false,\n            processSuccess: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier)\n        };\n    },\n\n    computed: {\n        notificationTargetIsLoading() {\n            return this.isLoading || this.notificationTarget == null;\n        },\n\n        notificationTargetRepository() {\n            return this.repositoryFactory.create('payone_payment_notification_target');\n        },\n\n        txactionsOptions() {\n            return [\n                { value: \"appointed\", label: \"appointed\" },\n                { value: \"capture\", label: \"capture\" },\n                { value: \"paid\", label: \"paid\" },\n                { value: \"underpaid\", label: \"underpaid\" },\n                { value: \"cancelation\", label: \"cancelation\" },\n                { value: \"refund\", label: \"refund\" },\n                { value: \"debit\", label: \"debit\" },\n                { value: \"transfer\", label: \"transfer\" },\n                { value: \"reminder\", label: \"reminder\" },\n                { value: \"vauthorization\", label: \"vauthorization\" },\n                { value: \"vsettlement\", label: \"vsettlement\" },\n                { value: \"invoice\", label: \"invoice\" },\n                { value: \"failed\", label: \"failed\" }\n            ];\n        }\n    },\n\n    watch: {\n        notificationTargetId() {\n            this.createdComponent();\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.notificationTargetId) {\n                this.loadEntityData();\n                return;\n            }\n\n            if (!Shopware.Store.get('context').isSystemDefaultLanguage) {\n                Shopware.Store.get('context').resetLanguageToDefault();\n            }\n\n            this.notificationTarget = this.notificationTargetRepository.create(Shopware.Context.api);\n        },\n\n        loadEntityData() {\n            this.isLoading = true;\n\n            this.notificationTargetRepository.get(this.notificationTargetId, Shopware.Context.api).then((notificationTarget) => {\n                this.isLoading = false;\n\n                this.notificationTarget = notificationTarget;\n\n                if (null === notificationTarget.txactions) {\n                    return;\n                }\n\n                if (!notificationTarget.txactions.length) {\n                    this.notificationTarget.txactions = null;\n                }\n            });\n        },\n\n        isInvalid() {\n            if (this.notificationTarget.isBasicAuth !== true) {\n                return false;\n            }\n\n            if (this.notificationTarget.username && this.notificationTarget.password) {\n                return false;\n            }\n\n            this.createNotificationError({\n                message: this.$t(\n                    'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid'\n                )\n            });\n\n            return true;\n        },\n\n        onSave() {\n            if (this.isInvalid()) {\n                return;\n            }\n\n            this.isLoading = true;\n\n            this.notificationTargetRepository.save(this.notificationTarget, Shopware.Context.api).then(() => {\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n                this.createNotificationSuccess({\n                    message: this.$t(\n                        'payonePayment.notificationTarget.messages.successfullySaved'\n                    ),\n                });\n\n                if (this.notificationTargetId === null) {\n                    this.$router.push({\n                        name: 'payone.notification.target.detail',\n                        params: {id: this.notificationTarget.id}\n                    });\n                    return;\n                }\n\n                this.loadEntityData();\n            }).catch((exception) => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    message: this.$t(\n                        'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid'\n                    )\n                });\n                throw exception;\n            });\n        },\n\n        onCancel() {\n            this.$router.push({name: 'payone.notification.target.list'});\n        }\n    }\n};\n"],"names":["template","Mixin","index","notificationTarget","exception"],"mappings":"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"}