const s=`{% block sw_order_detail_content_tabs_extension %} {% parent() %} {% block sw_order_detail_content_tabs_payone %} <sw-tabs-item v-if="canAccessPayoneTab()" class="sw-order-detail__tabs-tab-payone" :route="{ name: 'sw.order.detail.payone', params: { id: $route.params.id } }" :title="$t('sw-order.detail.payone')" > {{ $t('sw-order.detail.payone') }} </sw-tabs-item> {% endblock %} {% endblock %}`,o={template:s,inject:["acl"],methods:{hasPayoneTransaction(a){let e=!1,n=this;return a.transactions?(a.transactions.map(function(t){n.isPayoneTransaction(t)&&n.isActiveTransaction(t)&&(e=!0)}),e):!1},isPayoneTransaction(a){return!a.extensions||!a.extensions.payonePaymentOrderTransactionData||!a.extensions.payonePaymentOrderTransactionData.transactionId?!1:a.extensions.payonePaymentOrderTransactionData.transactionId},isActiveTransaction(a){return a.stateMachineState.technicalName!=="cancelled"},canAccessPayoneTab(){return(this.acl.can("payone_order_management")||this.acl.can("payone_payment_order_action_log:read")||this.acl.can("payone_payment_notification_forward:read")||this.acl.can("payone_payment_webhook_log:read"))&&this.order&&this.hasPayoneTransaction(this.order)}}};export{o as default};
//# sourceMappingURL=index-z3jAkgAL.js.map
