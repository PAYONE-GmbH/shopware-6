{"version":3,"file":"index-BRtyPmhG.js","sources":["../../../app/administration/src/module/payone-notification-target/page/payone-notification-target-list/payone-notification-target-list.html.twig","../../../app/administration/src/module/payone-notification-target/page/payone-notification-target-list/index.js"],"sourcesContent":["{% block payone_notification_target_list %}\n    <sw-page class=\"sw-review-list\">\n        {% block payone_notification_target_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block payone_notification_target_list_smart_bar_header_title %}\n                    <h2>\n                        {% block payone_notification_target_list_smart_bar_header_title_text %}\n                            {{ $t('payonePayment.notificationTarget.list.title') }}\n                        {% endblock %}\n\n                        {% block payone_notification_target_list_smart_bar_header_amount %}\n                            <span\n                                v-if=\"!isLoading\"\n                                class=\"sw-page__smart-bar-amount\"\n                            >({{ items.total }})</span>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block payone_notification_target_list_actions %}\n            <template #smart-bar-actions>\n                {% block payone_notification_target_list_smart_bar_actions %}\n                    <mt-button\n                        @click=\"$router.push({ name: 'payone.notification.target.create' })\"\n                        variant=\"primary\"\n                        v-if=\"acl.can('payone_payment_notification_target:create')\"\n                    >\n                        {{ $t('payonePayment.notificationTarget.list.buttonCreate') }}\n                    </mt-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block payone_notification_target_list_content %}\n            <template #content>\n                {% block payone_notification_target_list_content_list %}\n                    <sw-entity-listing\n                        v-if=\"items\"\n                        ref=\"payoneNotificationTargetGrid\"\n                        detailRoute=\"payone.notification.target.detail\"\n                        :limit=\"criteriaLimit\"\n                        :repository=\"repository\"\n                        :columns=\"notificationTargetColumns\"\n                        :items=\"items\"\n                        @column-sort=\"onSortColumn\"\n                        :disableDataFetching=\"true\"\n                        :sortBy=\"sortBy\"\n                        :showSelection=\"false\"\n                        :sortDirection=\"sortDirection\"\n                        identifier=\"payone-notification-target-list\"\n                        :allowInlineEdit=\"false\"\n                        :allowBulkEdit=\"false\"\n                        :allowColumnEdit=\"acl.can('payone_payment_notification_target:update')\"\n                        :allowEdit=\"acl.can('payone_payment_notification_target:update')\"\n                        :allowDelete=\"acl.can('payone_payment_notification_target:delete')\"\n                    >\n                        {% block payone_notification_target_list_grid_columns %}\n                            {% block payone_notification_target_list_grid_columns_url %}\n                                <template #column-url=\"{ item }\">\n                                    <router-link\n                                        :to=\"{ name: 'payone.notification.target.detail', params: { id: item.id } }\"\n                                        v-if=\"acl.can('payone_payment_notification_target:update')\"\n                                    >\n                                        {{ item.url }}\n                                    </router-link>\n\n                                    <span v-else>{{ item.url }}</span>\n                                </template>\n                            {% endblock %}\n\n                            {% block payone_notification_target_list_grid_columns_is_basic_auth %}\n                                <template #column-isBasicAuth=\"{ item }\">\n                                    <mt-icon\n                                        v-if=\"item.isBasicAuth\"\n                                        name=\"regular-checkmark-xs\"\n                                        size=\"16px\"\n                                        class=\"is--active\"\n                                    ></mt-icon>\n\n                                    <mt-icon\n                                        v-else\n                                        name=\"regular-times-s\"\n                                        size=\"16px\"\n                                        class=\"is--inactive\"\n                                    ></mt-icon>\n                                </template>\n                            {% endblock %}\n\n                            {% block payone_notification_target_list_grid_columns_txactions %}\n                                <template #column-txactions=\"{ item }\">\n                                    {{ renderTxactions(item.txactions) }}\n                                </template>\n                            {% endblock %}\n                        {% endblock %}\n                    </sw-entity-listing>\n                {% endblock %}\n\n                {% block payone_notification_target_list_empty_state %}\n                    <sw-empty-state\n                        v-if=\"!isLoading && !total\"\n                        icon=\"regular-repeat\"\n                        :title=\"$t('payonePayment.notificationTarget.list.empty')\"\n                    >\n                    </sw-empty-state>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block payone_notification_target_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar>\n                    {% block payone_notification_target_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                            icon=\"regular-undo\"\n                            :title=\"$t('sw-review.list.titleSidebarItemRefresh')\"\n                            @click=\"onRefresh\"\n                        >\n                        </sw-sidebar-item>\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}","import template from './payone-notification-target-list.html.twig';\nconst { Mixin, Data: { Criteria } } = Shopware;\n\nexport default {\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            items: null,\n            sortBy: 'createdAt',\n            criteriaLimit: 500,\n            criteriaPage: 1,\n            limit: 500\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    computed: {\n        notificationTargetColumns() {\n            return [\n                {\n                    dataIndex: 'url',\n                    property: 'url',\n                    label: 'payonePayment.notificationTarget.columns.url',\n                    primary: true\n                },\n                {\n                    dataIndex: 'isBasicAuth',\n                    property: 'isBasicAuth',\n                    label: 'payonePayment.notificationTarget.columns.isBasicAuth'\n                },\n                {\n                    property: 'txactions',\n                    label: 'payonePayment.notificationTarget.columns.txactions'\n                },\n            ];\n        },\n        repository() {\n            return this.repositoryFactory.create('payone_payment_notification_target');\n        },\n        criteria() {\n            const criteria = new Criteria(this.criteriaPage, this.criteriaLimit);\n\n            return criteria;\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        renderTxactions(content) {\n            if(content === null || !content.length) {\n                return '';\n            }\n\n            return content.join(\", \");\n        },\n\n        createdComponent() {\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const context = { ...Shopware.Context.api, inheritance: true };\n            return this.repository.search(this.criteria, context).then((result) => {\n                this.total = result.total;\n                this.items = result;\n                this.isLoading = false;\n            });\n        },\n\n        onDelete(option) {\n            this.$refs.listing.deleteItem(option);\n            this.getList();\n        },\n    }\n};\n"],"names":["template","Mixin","Criteria","index","content","context","result","option"],"mappings":"AAAA,MAAAA,EAAe,+wGCCT,CAAE,MAAAC,EAAO,KAAM,CAAE,SAAAC,CAAQ,CAAE,EAAK,SAEtCC,EAAe,CACX,SAAAH,EAEA,OAAQ,CAAC,oBAAqB,KAAK,EAEnC,OAAQ,CACJC,EAAM,UAAU,SAAS,CACjC,EAEI,MAAO,CACH,MAAO,CACH,UAAW,GACX,MAAO,KACP,OAAQ,YACR,cAAe,IACf,aAAc,EACd,MAAO,GACnB,CACA,EAEI,UAAW,CACP,MAAO,CACH,MAAO,KAAK,aAAY,CACpC,CACA,EAEI,SAAU,CACN,2BAA4B,CACxB,MAAO,CACH,CACI,UAAW,MACX,SAAU,MACV,MAAO,+CACP,QAAS,EAC7B,EACgB,CACI,UAAW,cACX,SAAU,cACV,MAAO,sDAC3B,EACgB,CACI,SAAU,YACV,MAAO,oDAC3B,CACA,CACA,EACQ,YAAa,CACT,OAAO,KAAK,kBAAkB,OAAO,oCAAoC,CACrF,EACQ,UAAW,CAGP,OAFiB,IAAIC,EAAS,KAAK,aAAc,KAAK,aAAa,CAG/E,CACA,EAEI,SAAU,CACN,KAAK,iBAAgB,CAC7B,EAEI,QAAS,CACL,gBAAgBE,EAAS,CACrB,OAAGA,IAAY,MAAQ,CAACA,EAAQ,OACrB,GAGJA,EAAQ,KAAK,IAAI,CACpC,EAEQ,kBAAmB,CACf,KAAK,QAAO,CACxB,EAEQ,SAAU,CACN,KAAK,UAAY,GAEjB,MAAMC,EAAU,CAAE,GAAG,SAAS,QAAQ,IAAK,YAAa,EAAI,EAC5D,OAAO,KAAK,WAAW,OAAO,KAAK,SAAUA,CAAO,EAAE,KAAMC,GAAW,CACnE,KAAK,MAAQA,EAAO,MACpB,KAAK,MAAQA,EACb,KAAK,UAAY,EACjC,CAAa,CACb,EAEQ,SAASC,EAAQ,CACb,KAAK,MAAM,QAAQ,WAAWA,CAAM,EACpC,KAAK,QAAO,CACxB,CACA,CACA"}