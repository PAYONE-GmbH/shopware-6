{"version":3,"file":"index-Be5-UySV.js","sources":["../../../app/administration/src/module/sw-order/component/payone-payment-order-action-log/payone-payment-order-action-log.html.twig","../../../app/administration/src/module/sw-order/component/payone-payment-order-action-log/index.js"],"sourcesContent":["{% block payone_payment_order_action_log %}\n    <mt-card\n        class=\"payone-payment-order-action-log-card\"\n        position-identifier=\"payone-payment-order-action-log-card\"\n        :title=\"$t('sw-order.payone-payment.orderActionLog.cardTitle')\"\n    >\n        <sw-data-grid\n            v-if=\"orderActionLogs.length > 0\"\n            :showSelection=\"false\"\n            :dataSource=\"orderActionLogs\"\n            :columns=\"orderActionLogColumns\"\n            :isLoading=\"isLoading\"\n        >\n            <template #column-amount=\"{ item }\">\n                {{ currencyFilter(item.amount / 100, order.currency.isoCode) }}\n            </template>\n\n            <template #column-requestDateTime=\"{ item }\">\n                {{ dateFilter(item.requestDateTime, { hour: '2-digit', minute: '2-digit' }) }}\n            </template>\n\n            <template #actions=\"{ item }\">\n                <sw-context-menu-item @click=\"openRequest(item)\">\n                    {{ $t('sw-order.payone-payment.orderActionLog.contextMenu.openRequestDetails') }}\n                </sw-context-menu-item>\n\n                <sw-context-menu-item @click=\"openResponse(item)\">\n                    {{ $t('sw-order.payone-payment.orderActionLog.contextMenu.openResponseDetails') }}\n                </sw-context-menu-item>\n            </template>\n\n            <template #action-modals=\"{ item }\">\n                <sw-modal\n                    v-if=\"showRequestDetails\"\n                    :title=\"$t('sw-order.payone-payment.orderActionLog.requestDetailsModal.title')\"\n                    variant=\"large\"\n                    @modal-close=\"onCloseRequestModal\"\n                >\n                    <mt-button\n                        variant=\"primary\"\n                        @click=\"downloadAsTxt(showRequestDetails, 'request', item.transactionId)\"\n                    >\n                        {{ $t('sw-order.payone-payment.orderActionLog.requestDetailsModal.downloadButton') }}\n                    </mt-button>\n\n                    <sw-data-grid\n                        :showSelection=\"false\"\n                        :showActions=\"false\"\n                        :dataSource=\"toKeyValueSource(showRequestDetails)\"\n                        :columns=\"keyValueColumns\"\n                        :isLoading=\"isLoading\"\n                    >\n                    </sw-data-grid>\n                </sw-modal>\n\n                <sw-modal\n                    v-if=\"showResponseDetails\"\n                    :title=\"$t('sw-order.payone-payment.orderActionLog.responseDetailsModal.title')\"\n                    variant=\"large\"\n                    @modal-close=\"onCloseResponseModal\"\n                >\n                    <mt-button\n                        variant=\"primary\"\n                        @click=\"downloadAsTxt(showResponseDetails, 'response', item.transactionId)\"\n                    >\n                        {{ $t('sw-order.payone-payment.orderActionLog.responseDetailsModal.downloadButton') }}\n                    </mt-button>\n\n                    <sw-data-grid\n                        :showSelection=\"false\"\n                        :showActions=\"false\"\n                        :dataSource=\"toKeyValueSource(showResponseDetails)\"\n                        :columns=\"keyValueColumns\"\n                        :isLoading=\"isLoading\"\n                    >\n                    </sw-data-grid>\n                </sw-modal>\n            </template>\n        </sw-data-grid>\n\n        <sw-empty-state\n            v-else\n            :absolute=\"false\"\n            :title=\"$t('sw-order.payone-payment.orderActionLog.emptyState.title')\"\n            :subline=\"$t('sw-order.payone-payment.orderActionLog.emptyState.subline')\"\n        >\n            <template #icon>\n                <img\n                    :src=\"assetFilter('/administration/administration/static/img/empty-states/order-empty-state.svg')\"\n                    :alt=\"$t('sw-order.payone-payment.orderActionLog.emptyState.title')\"\n                />\n            </template>\n        </sw-empty-state>\n    </mt-card>\n{% endblock %}","import template from './payone-payment-order-action-log.html.twig';\n\nconst {Criteria} = Shopware.Data;\nconst { Filter } = Shopware;\n\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        order: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            orderActionLogs: [],\n            isLoading: false,\n            showRequestDetails: null,\n            showResponseDetails: null,\n        };\n    },\n\n    computed: {\n        orderActionLogRepository() {\n            return this.repositoryFactory.create('payone_payment_order_action_log');\n        },\n\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n\n        currencyFilter() {\n            return Filter.getByName('currency');\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n\n        payoneCurrencyFilter() {\n            return Filter.getByName('payone_currency');\n        },\n\n        orderActionLogColumns() {\n            return [\n                {\n                    property: 'transactionId',\n                    label: this.$t('sw-order.payone-payment.orderActionLog.columnTitleTransactionId')\n                },\n                {\n                    property: 'request',\n                    label: this.$t('sw-order.payone-payment.orderActionLog.columnTitleRequest')\n                },\n                {\n                    property: 'response',\n                    label: this.$t('sw-order.payone-payment.orderActionLog.columnTitleResponse')\n                },\n                {\n                    property: 'amount',\n                    label: this.$t('sw-order.payone-payment.orderActionLog.columnTitleAmount')\n                },\n                {\n                    property: 'requestDateTime',\n                    label: this.$t('sw-order.payone-payment.orderActionLog.columnTitleRequestDateTime')\n                },\n            ];\n        },\n\n        keyValueColumns() {\n            return [\n                {property: 'key', label: this.$t('sw-order.payone-payment.orderActionLog.columnTitleKey')},\n                {property: 'value', label: this.$t('sw-order.payone-payment.orderActionLog.columnTitleValue')},\n            ];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getOrderActionLogs();\n        },\n\n        reloadActionLogs() {\n            this.getOrderActionLogs();\n        },\n\n        getOrderActionLogs() {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('orderId', this.order.id));\n            criteria.addSorting(Criteria.sort('requestDateTime', 'ASC', true));\n\n            this.isLoading = true;\n            return this.orderActionLogRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                this.orderActionLogs = searchResult;\n                this.isLoading = false;\n            });\n        },\n\n        openRequest(orderActionLog) {\n            this.showRequestDetails = orderActionLog.requestDetails;\n        },\n\n        openResponse(orderActionLog) {\n            this.showResponseDetails = orderActionLog.responseDetails;\n        },\n\n        onCloseRequestModal() {\n            this.showRequestDetails = null;\n        },\n\n        onCloseResponseModal() {\n            this.showResponseDetails = null;\n        },\n\n        toKeyValueSource(object) {\n            const data = [];\n\n            for (const key in object) {\n                data.push({key, value: object[key]});\n            }\n\n            data.sort((a, b) => a.key.localeCompare(b.key));\n\n            return data;\n        },\n\n        downloadAsTxt(object, objectType, id) {\n            const link = document.createElement('a');\n            link.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(object, null, 4));\n            link.download = `PAYONE-${objectType}-${id}.txt`;\n            link.dispatchEvent(new MouseEvent('click'));\n            link.remove();\n        },\n    }\n};\n"],"names":["template","Criteria","Filter","index","criteria","searchResult","orderActionLog","object","data","key","a","b","objectType","id","link"],"mappings":"AAAA,MAAAA,EAAe,ikFCET,CAAC,SAAAC,CAAQ,EAAI,SAAS,KACtB,CAAE,OAAAC,CAAM,EAAK,SAEnBC,EAAe,CACX,SAAAH,EAEA,OAAQ,CAAC,mBAAmB,EAE5B,MAAO,CACH,MAAO,CACH,KAAM,OACN,SAAU,EACtB,CACA,EAEI,MAAO,CACH,MAAO,CACH,gBAAiB,CAAA,EACjB,UAAW,GACX,mBAAoB,KACpB,oBAAqB,IACjC,CACA,EAEI,SAAU,CACN,0BAA2B,CACvB,OAAO,KAAK,kBAAkB,OAAO,iCAAiC,CAClF,EAEQ,YAAa,CACT,OAAOE,EAAO,UAAU,MAAM,CAC1C,EAEQ,gBAAiB,CACb,OAAOA,EAAO,UAAU,UAAU,CAC9C,EAEQ,aAAc,CACV,OAAOA,EAAO,UAAU,OAAO,CAC3C,EAEQ,sBAAuB,CACnB,OAAOA,EAAO,UAAU,iBAAiB,CACrD,EAEQ,uBAAwB,CACpB,MAAO,CACH,CACI,SAAU,gBACV,MAAO,KAAK,GAAG,iEAAiE,CACpG,EACgB,CACI,SAAU,UACV,MAAO,KAAK,GAAG,2DAA2D,CAC9F,EACgB,CACI,SAAU,WACV,MAAO,KAAK,GAAG,4DAA4D,CAC/F,EACgB,CACI,SAAU,SACV,MAAO,KAAK,GAAG,0DAA0D,CAC7F,EACgB,CACI,SAAU,kBACV,MAAO,KAAK,GAAG,mEAAmE,CACtG,CACA,CACA,EAEQ,iBAAkB,CACd,MAAO,CACH,CAAC,SAAU,MAAO,MAAO,KAAK,GAAG,uDAAuD,CAAC,EACzF,CAAC,SAAU,QAAS,MAAO,KAAK,GAAG,yDAAyD,CAAC,CAC7G,CACA,CACA,EAEI,SAAU,CACN,KAAK,iBAAgB,CAC7B,EAEI,QAAS,CACL,kBAAmB,CACf,KAAK,mBAAkB,CACnC,EAEQ,kBAAmB,CACf,KAAK,mBAAkB,CACnC,EAEQ,oBAAqB,CACjB,MAAME,EAAW,IAAIH,EACrB,OAAAG,EAAS,UAAUH,EAAS,OAAO,UAAW,KAAK,MAAM,EAAE,CAAC,EAC5DG,EAAS,WAAWH,EAAS,KAAK,kBAAmB,MAAO,EAAI,CAAC,EAEjE,KAAK,UAAY,GACV,KAAK,yBAAyB,OAAOG,EAAU,SAAS,QAAQ,GAAG,EAAE,KAAMC,GAAiB,CAC/F,KAAK,gBAAkBA,EACvB,KAAK,UAAY,EACjC,CAAa,CACb,EAEQ,YAAYC,EAAgB,CACxB,KAAK,mBAAqBA,EAAe,cACrD,EAEQ,aAAaA,EAAgB,CACzB,KAAK,oBAAsBA,EAAe,eACtD,EAEQ,qBAAsB,CAClB,KAAK,mBAAqB,IACtC,EAEQ,sBAAuB,CACnB,KAAK,oBAAsB,IACvC,EAEQ,iBAAiBC,EAAQ,CACrB,MAAMC,EAAO,CAAA,EAEb,UAAWC,KAAOF,EACdC,EAAK,KAAK,CAAC,IAAAC,EAAK,MAAOF,EAAOE,CAAG,CAAC,CAAC,EAGvC,OAAAD,EAAK,KAAK,CAACE,EAAGC,IAAMD,EAAE,IAAI,cAAcC,EAAE,GAAG,CAAC,EAEvCH,CACnB,EAEQ,cAAcD,EAAQK,EAAYC,EAAI,CAClC,MAAMC,EAAO,SAAS,cAAc,GAAG,EACvCA,EAAK,KAAO,iCAAmC,mBAAmB,KAAK,UAAUP,EAAQ,KAAM,CAAC,CAAC,EACjGO,EAAK,SAAW,UAAUF,CAAU,IAAIC,CAAE,OAC1CC,EAAK,cAAc,IAAI,WAAW,OAAO,CAAC,EAC1CA,EAAK,OAAM,CACvB,CACA,CACA"}