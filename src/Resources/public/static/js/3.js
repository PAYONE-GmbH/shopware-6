(this["webpackJsonpPluginpayone-payment"]=this["webpackJsonpPluginpayone-payment"]||[]).push([[3],{E2Wp:function(e,n,t){"use strict";t.r(n);t("qRMf");var a=Shopware.Mixin,i=Shopware.Utils,s=i.object,o=i.types;n.default={template:'{% block payone_payment %}\n<sw-page class="payone-payment">\n    {% block payone_payment_header %}\n    <template #smart-bar-header>\n        <h2>\n            {{ $tc(\'sw-settings.index.title\') }}\n            <sw-icon name="regular-chevron-right-xs" small></sw-icon>\n            {{ $tc(\'payone-payment.title\') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    {% block payone_payment_actions %}\n    <template #smart-bar-actions>\n        {% block payone_payment_settings_actions_feedback %}\n        <sw-button\n                @click="isSupportModalOpen = true"\n                :disabled="false"\n                variant="ghost"\n                :square="false"\n                :block="false"\n                :isLoading="false">\n            {{ $tc(\'payone-payment.supportModal.menuButton\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block payone_payment_settings_actions_notification_forward_target %}\n            <sw-button\n                :routerLink="{ name: \'payone.notification.target.list\' }"\n                :disabled="false"\n                variant="ghost"\n                :square="false"\n                :block="false"\n                :isLoading="false">\n                {{ $tc(\'payonePayment.notificationTarget.module.buttonTitle\') }}\n            </sw-button>\n        {% endblock %}\n\n        {% block payone_payment_settings_actions_test %}\n        <sw-button-process @click="onTest"\n                           :isLoading="isTesting"\n                           :processSuccess="isTestSuccessful"\n                           :disabled="credentialsMissing || isLoading">\n            {{ $tc(\'payone-payment.settingsForm.test\') }}\n        </sw-button-process>\n        {% endblock %}\n\n        {% block payone_payment_settings_actions_save %}\n        <sw-button-process\n                class="sw-settings-login-registration__save-action"\n                :isLoading="isLoading"\n                :processSuccess="isSaveSuccessful"\n                :disabled="isLoading || isTesting"\n                variant="primary"\n                @process-finish="saveFinish"\n                @click="onSave">\n            {{ $tc(\'payone-payment.settingsForm.save\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    {% block payone_payment_settings_content %}\n    <template #content>\n        <sw-modal\n                v-if="isSupportModalOpen"\n                @modal-close="isSupportModalOpen = false"\n                :title="$tc(\'payone-payment.supportModal.title\')"\n                class="payone-feedback sw-modal--large">\n            <sw-container columns="1fr 1fr 1fr 1fr">\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-file-text" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.documentation.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="https://docs.payone.com/display/public/INT/Shopware+6+Plugin">\n                        {{ $tc(\'payone-payment.supportModal.documentation.button\') }}\n                    </sw-button>\n                </div>\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-headset" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.support.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="mailto:tech.support@payone.com">\n                        {{ $tc(\'payone-payment.supportModal.support.button\') }}\n                    </sw-button>\n                </div>\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-code" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.repository.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="https://github.com/PAYONE-GmbH/shopware-6">\n                        {{ $tc(\'payone-payment.supportModal.repository.button\') }}\n                    </sw-button>\n                </div>\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-fingerprint" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.testdata.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="https://www.payone.com/DE-de/kampagne/ecom-testaccount">\n                        {{ $tc(\'payone-payment.supportModal.testdata.button\') }}\n                    </sw-button>\n                </div>\n            </sw-container>\n        </sw-modal>\n\n        <sw-card-view>\n            <sw-system-config\n                    class="payone-config__wrapper"\n                    ref="systemConfig"\n                    salesChannelSwitchable\n                    inherit\n                    @config-changed="onConfigChange"\n                    domain="PayonePayment.settings">\n\n                <template #beforeElements="{card, config}">\n                    <div v-if="isCollapsible(card)" class="payone-config__collapsible-container" v-bind:class="{\'collapsed\': isCollapsed(card)}" >\n                        <a class="payone-config__collapsible-handle" @click="toggleCollapsible(card)">\n                            <sw-icon small v-if="isCollapsed(card)" name="regular-chevron-down-xxs" class="payone-config__collapsible-handle-open"></sw-icon>\n                            <sw-icon small v-if="!isCollapsed(card)" name="regular-chevron-up-xxs" class="payone-config__collapsible-handle-close"></sw-icon>\n                        </a>\n                    </div>\n                </template>\n\n                <template #card-element="{element, config, card}">\n                    <div v-show="displayField(element, config, card)">\n                        <sw-alert v-if="element.name === \'PayonePayment.settings.applePayCertPassphrase\' && !isApplePayCertConfigured"\n                            variant="info" appearance="default" :showIcon="true" :closable="false">\n                            <span v-html="$tc(\'payone-payment.applePay.cert.notification\')"></span>\n                        </sw-alert>\n\n                        <sw-form-field-renderer\n                            v-if="element.name.startsWith(\'PayonePayment.settings.paymentStatus\')"\n                            :config="{\n                                componentName: \'sw-single-select\',\n                                label: getInlineSnippet(getElementBind(getBind(element, config)).config.label),\n                                helpText: getInlineSnippet(getElementBind(getBind(element, config)).config.helpText),\n                                options: stateMachineTransitionActions,\n                            }"\n                            v-model="config[element.name]"\n                        />\n\n                        <sw-form-field-renderer\n                            v-else-if="!element.name.includes(\'PaymentStatus\')"\n                            v-bind="getElementBind(getBind(element, config))"\n                            v-model="config[element.name]"\n                        />\n\n                        <div v-if="element.name.includes(\'ProfileConfigurations\')">\n                            <button class="sw-button payone-config-reaload__btn"\n                                    @click="onSave">{{ $tc(\'payone-payment.general.label.reloadConfigBtn\') }}</button>\n                            <p class="payone-config-reaload__info">{{ $tc(\'payone-payment.general.label.reloadConfigInfo\') }}</p>\n                        </div>\n\n                    </div>\n                </template>\n\n                <template #afterElements="{card, config}">\n                    <sw-switch-field v-if="isVisiblePaymentMethodCard(card)"\n                                     v-model="displayStatusMapping[card.name]"\n                                     :label="$tc(\'payone-payment.settingsForm.labelShowSpecificStatusMapping\')"\n                                     :helpText="$tc(\'payone-payment.settingsForm.helpTextShowSpecificStatusMapping\')"></sw-switch-field>\n\n                    <div v-if="config">\n                        <template v-for="element in card.elements">\n                            <sw-form-field-renderer\n                                v-if="element.name.includes(\'PaymentStatus\') && displayStatusMapping[card.name]"\n                                :config="{\n                                    componentName: \'sw-single-select\',\n                                    label: getInlineSnippet(getElementBind(getBind(element, config)).config.label),\n                                    helpText: getInlineSnippet(getElementBind(getBind(element, config)).config.helpText),\n                                    options: stateMachineTransitionActions,\n                                }"\n                                v-model="config[element.name]" />\n                        </template>\n                    </div>\n                </template>\n            </sw-system-config>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',mixins:[a.getByName("notification"),a.getByName("sw-inline-snippet")],inject:["PayonePaymentSettingsService"],data:function(){return{isLoading:!1,isTesting:!1,isSaveSuccessful:!1,isTestSuccessful:!1,isApplePayCertConfigured:!0,config:{},merchantIdFilled:!1,accountIdFilled:!1,portalIdFilled:!1,portalKeyFilled:!1,showValidationErrors:!1,isSupportModalOpen:!1,stateMachineTransitionActions:[],displayStatusMapping:{},collapsibleState:{status_mapping:!0,payment_credit_card:!0,payment_paypal:!0,payment_paypal_express:!0,payment_debit:!0,payment_sofort:!0,payment_payolution_installment:!0,payment_payolution_invoicing:!0,payment_payolution_debit:!0,payment_eps:!0,payment_ideal:!0,payment_paydirekt:!0,payment_prepayment:!0,payment_trustly:!0,payment_secure_invoice:!0,payment_open_invoice:!0,payment_apple_pay:!0,payment_bancontact:!0,payment_ratepay_debit:!0,payment_ratepay_installment:!0,payment_ratepay_invoicing:!0,payment_klarna_invoice:!0,payment_klarna_direct_debit:!0,payment_klarna_installment:!0,payment_przelewy24:!0,payment_we_chat_pay:!0,payment_postfinanceCard:!0,payment_postfinanceWallet:!0,payment_alipay:!0,payment_secured_invoice:!0,payment_secured_installment:!0,payment_secured_direct_debit:!0}}},created:function(){this.createdComponent()},computed:{credentialsMissing:function(){return!(this.merchantIdFilled&&this.accountIdFilled&&this.portalIdFilled&&this.portalKeyFilled)}},metaInfo:function(){return{title:this.$createTitle()}},methods:{createdComponent:function(){var e=this,n=this;this.PayonePaymentSettingsService.getStateMachineTransitionActions().then((function(e){e.data.forEach((function(e){var t="payone-payment.transitionActionNames."+e.label,a=n.$t(t);a===t&&(a=e.label),n.stateMachineTransitionActions.push({label:a,value:e.value})}))})),this.PayonePaymentSettingsService.hasApplePayCert().then((function(n){e.isApplePayCertConfigured=n}))},paymentMethodPrefixes:function(){return["creditCard","debit","paypal","paypalExpress","payolutionInvoicing","payolutionInstallment","payolutionDebit","sofort","eps","iDeal","paydirekt","prepayment","trustly","secureInvoice","openInvoice","applePay","bancontact","ratepayDebit","ratepayInstallment","ratepayInvoicing","klarnaInvoice","klarnaDirectDebit","klarnaInstallment","przelewy24","weChatPay","postfinanceCard","postfinanceWallet","alipay","securedInvoice","securedInstallment","securedDirectDebit"]},isVisiblePaymentMethodCard:function(e){return e.name.startsWith("payment")&&!this.isCollapsed(e)},isCollapsible:function(e){return e.name in this.collapsibleState},displayField:function(e,n,t){return!(t.name in this.collapsibleState)||!this.collapsibleState[t.name]},isCollapsed:function(e){return this.collapsibleState[e.name]},toggleCollapsible:function(e){e.name in this.collapsibleState&&(this.collapsibleState[e.name]=!this.collapsibleState[e.name])},saveFinish:function(){this.isSaveSuccessful=!1},testFinish:function(){this.isTestSuccessful=!1},onConfigChange:function(e){this.config=e,this.checkCredentialsFilled(),this.showValidationErrors=!1},checkCredentialsFilled:function(){this.merchantIdFilled=!!this.getConfigValue("merchantId"),this.accountIdFilled=!!this.getConfigValue("accountId"),this.portalIdFilled=!!this.getConfigValue("portalId"),this.portalKeyFilled=!!this.getConfigValue("portalKey")},getConfigValue:function(e){var n=this.$refs.systemConfig.actualConfigData.null;return null===this.$refs.systemConfig.currentSalesChannelId?this.config["PayonePayment.settings.".concat(e)]:this.config["PayonePayment.settings.".concat(e)]||n["PayonePayment.settings.".concat(e)]},getPaymentConfigValue:function(e,n){var t=e.charAt(0).toUpperCase()+e.slice(1);return this.getConfigValue(n+t)||this.getConfigValue(e)},onSave:function(){var e=this;this.credentialsMissing?this.showValidationErrors=!0:(this.isSaveSuccessful=!1,this.isLoading=!0,this.$refs.systemConfig.saveAll().then((function(n){e.handleRatepayProfileUpdates(n),e.isLoading=!1,e.isSaveSuccessful=!0})).catch((function(){e.isLoading=!1})))},onTest:function(){var e=this;this.isTesting=!0,this.isTestSuccessful=!1;var n={};this.paymentMethodPrefixes().forEach((function(t){n[t]={merchantId:e.getPaymentConfigValue("merchantId",t),accountId:e.getPaymentConfigValue("accountId",t),portalId:e.getPaymentConfigValue("portalId",t),portalKey:e.getPaymentConfigValue("portalKey",t)}})),this.PayonePaymentSettingsService.validateApiCredentials(n).then((function(n){var t=n.testCount,a=n.credentialsValid,i=n.errors;if(a)e.createNotificationSuccess({title:e.$tc("payone-payment.settingsForm.titleSuccess"),message:t>0?e.$tc("payone-payment.settingsForm.messageTestSuccess"):e.$tc("payone-payment.settingsForm.messageTestNoTestedPayments")}),e.isTestSuccessful=!0;else for(var s in i)if(i.hasOwnProperty(s)){e.createNotificationError({title:e.$tc("payone-payment.settingsForm.titleError"),message:e.$tc("payone-payment.settingsForm.messageTestError."+s)});var o=i[s];"string"==typeof o&&e.createNotificationError({title:e.$tc("payone-payment.settingsForm.titleError"),message:o})}e.isTesting=!1})).catch((function(n){e.createNotificationError({title:e.$tc("payone-payment.settingsForm.titleError"),message:e.$tc("payone-payment.settingsForm.messageTestError.general")}),e.isTesting=!1}))},getBind:function(e,n){var t;return n!==this.config&&(this.config=n),this.showValidationErrors&&("PayonePayment.settings.merchantId"!==e.name||this.merchantIdFilled||(e.config.error={code:1,detail:this.$tc("payone-payment.messageNotBlank")}),"PayonePayment.settings.accountId"!==e.name||this.accountIdFilled||(e.config.error={code:1,detail:this.$tc("payone-payment.messageNotBlank")}),"PayonePayment.settings.portalId"!==e.name||this.portalIdFilled||(e.config.error={code:1,detail:this.$tc("payone-payment.messageNotBlank")}),"PayonePayment.settings.portalKey"!==e.name||this.portalKeyFilled||(e.config.error={code:1,detail:this.$tc("payone-payment.messageNotBlank")})),this.$refs.systemConfig.config.forEach((function(n){n.elements.forEach((function(n){n.name!==e.name||(t=n)}))})),t||e},getElementBind:function(e){var n=s.deepCopyObject(e);return null!==this.currentSalesChannelId&&this.inherit&&this.actualConfigData.hasOwnProperty("null")&&null!==this.actualConfigData.null[n.name]&&("single-select"===n.type||"sw-entity-single-select"===n.config.componentName?n.placeholder=this.$tc("sw-settings.system-config.inherited"):"bool"===n.type?n.config.inheritedValue=this.actualConfigData.null[n.name]||!1:"password"===n.type?(n.placeholderIsPassword=!0,n.placeholder="".concat(this.actualConfigData.null[n.name])):"multi-select"===n.type||o.isUndefined(this.actualConfigData.null[n.name])||(n.placeholder="".concat(this.actualConfigData.null[n.name]))),["single-select","multi-select"].includes(n.type)&&(n.config.labelProperty="name",n.config.valueProperty="id"),n},handleRatepayProfileUpdates:function(e){var n=this.$refs.systemConfig.currentSalesChannelId;if(e.payoneRatepayProfilesUpdateResult&&e.payoneRatepayProfilesUpdateResult[n]){var t=e.payoneRatepayProfilesUpdateResult[n];this.$root.$emit("payone-ratepay-profiles-update-result",t),Array.isArray(t.errors)||this.createNotificationError({title:this.$tc("payone-payment.settingsForm.titleError"),message:this.$tc("payone-payment.settingsForm.messageSaveError.ratepayProfilesUpdateFailed")})}}}}},lq05:function(e,n,t){},qRMf:function(e,n,t){var a=t("lq05");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("ydqr").default)("08a3d81c",a,!0,{})},ydqr:function(e,n,t){"use strict";function a(e,n){for(var t=[],a={},i=0;i<n.length;i++){var s=n[i],o=s[0],l={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};a[o]?a[o].parts.push(l):t.push(a[o]={id:o,parts:[l]})}return t}t.r(n),t.d(n,"default",(function(){return f}));var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},o=i&&(document.head||document.getElementsByTagName("head")[0]),l=null,r=0,c=!1,p=function(){},d=null,m="data-vue-ssr-id",y="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function f(e,n,t,i){c=t,d=i||{};var o=a(e,n);return u(o),function(n){for(var t=[],i=0;i<o.length;i++){var l=o[i];(r=s[l.id]).refs--,t.push(r)}n?u(o=a(e,n)):o=[];for(i=0;i<t.length;i++){var r;if(0===(r=t[i]).refs){for(var c=0;c<r.parts.length;c++)r.parts[c]();delete s[r.id]}}}}function u(e){for(var n=0;n<e.length;n++){var t=e[n],a=s[t.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](t.parts[i]);for(;i<t.parts.length;i++)a.parts.push(h(t.parts[i]));a.parts.length>t.parts.length&&(a.parts.length=t.parts.length)}else{var o=[];for(i=0;i<t.parts.length;i++)o.push(h(t.parts[i]));s[t.id]={id:t.id,refs:1,parts:o}}}}function g(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function h(e){var n,t,a=document.querySelector("style["+m+'~="'+e.id+'"]');if(a){if(c)return p;a.parentNode.removeChild(a)}if(y){var i=r++;a=l||(l=g()),n=_.bind(null,a,i,!1),t=_.bind(null,a,i,!0)}else a=g(),n=w.bind(null,a),t=function(){a.parentNode.removeChild(a)};return n(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;n(e=a)}else t()}}var v,b=(v=[],function(e,n){return v[e]=n,v.filter(Boolean).join("\n")});function _(e,n,t,a){var i=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=b(n,i);else{var s=document.createTextNode(i),o=e.childNodes;o[n]&&e.removeChild(o[n]),o.length?e.insertBefore(s,o[n]):e.appendChild(s)}}function w(e,n){var t=n.css,a=n.media,i=n.sourceMap;if(a&&e.setAttribute("media",a),d.ssrId&&e.setAttribute(m,n.id),i&&(t+="\n/*# sourceURL="+i.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}}]);