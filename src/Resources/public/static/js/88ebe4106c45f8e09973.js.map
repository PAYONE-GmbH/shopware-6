{"version":3,"file":"static/js/88ebe4106c45f8e09973.js","mappings":"uLACA,GAAM,CAAEA,MAAAA,CAAK,CAAEC,KAAM,CAAEC,SAAAA,CAAQ,CAAE,CAAE,CAAGC,SAEtC,MAAe,CACXC,SCJW,48JDMXC,OAAQ,CAAC,oBAAoB,CAE7BC,OAAQ,CACJN,EAAMO,SAAS,CAAC,WACnB,CAEDC,OACI,MAAO,CACHC,UAAW,GACXC,MAAO,KACPC,OAAQ,YACRC,cAAe,IACfC,aAAc,EACdC,MAAO,GACX,CACJ,EAEAC,WACI,MAAO,CACHC,MAAO,IAAI,CAACC,YAAY,EAC5B,CACJ,EAEAC,SAAU,CACNC,4BACI,MAAO,CACH,CACIC,UAAW,MACXC,SAAU,MACVC,MAAO,+CACPC,QAAS,EACb,EACA,CACIH,UAAW,cACXC,SAAU,cACVC,MAAO,sDACX,EACA,CACID,SAAU,YACVC,MAAO,oDACX,EACH,EAELE,aACI,OAAO,IAAI,CAACC,iBAAiB,CAACC,MAAM,CAAC,qCACzC,EACAC,WAGI,OAFiB,IAAIzB,EAAS,IAAI,CAACW,YAAY,CAAE,IAAI,CAACD,aAAa,CAGvE,CACJ,EAEAgB,UACI,IAAI,CAACC,gBAAgB,EACzB,EAEAC,QAAS,CACLC,gBAAgBC,CAAO,SACnB,OAAGA,GAAqBA,EAAQC,MAAM,CAI/BD,EAAQE,IAAI,CAAC,MAHT,EAIf,EAEAL,mBACI,IAAI,CAACM,OAAO,EAChB,EAEAA,UACI,IAAI,CAAC1B,SAAS,CAAG,GAEjB,IAAM2B,EAAU,CAAE,GAAGjC,SAASkC,OAAO,CAACC,GAAG,CAAEC,YAAa,EAAK,EAC7D,OAAO,IAAI,CAACf,UAAU,CAACgB,MAAM,CAAC,IAAI,CAACb,QAAQ,CAAES,GAASK,IAAI,CAAC,IACvD,IAAI,CAACC,KAAK,CAAGC,EAAOD,KAAK,CACzB,IAAI,CAAChC,KAAK,CAAGiC,EACb,IAAI,CAAClC,SAAS,CAAG,EACrB,EACJ,EAEAmC,SAASC,CAAM,EACX,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,UAAU,CAACH,GAC9B,IAAI,CAACV,OAAO,EAChB,CACJ,CACJ,C","sources":["webpack://administration/../../../../../../custom/plugins/PayonePayment/src/Resources/app/administration/src/module/payone-notification-target/page/payone-notification-target-list/index.js","webpack://administration/../../../../../../custom/plugins/PayonePayment/src/Resources/app/administration/src/module/payone-notification-target/page/payone-notification-target-list/payone-notification-target-list.html.twig"],"sourcesContent":["import template from './payone-notification-target-list.html.twig';\nconst { Mixin, Data: { Criteria } } = Shopware;\n\nexport default {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            items: null,\n            sortBy: 'createdAt',\n            criteriaLimit: 500,\n            criteriaPage: 1,\n            limit: 500\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    computed: {\n        notificationTargetColumns() {\n            return [\n                {\n                    dataIndex: 'url',\n                    property: 'url',\n                    label: 'payonePayment.notificationTarget.columns.url',\n                    primary: true\n                },\n                {\n                    dataIndex: 'isBasicAuth',\n                    property: 'isBasicAuth',\n                    label: 'payonePayment.notificationTarget.columns.isBasicAuth'\n                },\n                {\n                    property: 'txactions',\n                    label: 'payonePayment.notificationTarget.columns.txactions'\n                },\n            ];\n        },\n        repository() {\n            return this.repositoryFactory.create('payone_payment_notification_target');\n        },\n        criteria() {\n            const criteria = new Criteria(this.criteriaPage, this.criteriaLimit);\n\n            return criteria;\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        renderTxactions(content) {\n            if(content === null || !content.length) {\n                return '';\n            }\n\n            return content.join(\", \");\n        },\n\n        createdComponent() {\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const context = { ...Shopware.Context.api, inheritance: true };\n            return this.repository.search(this.criteria, context).then((result) => {\n                this.total = result.total;\n                this.items = result;\n                this.isLoading = false;\n            });\n        },\n\n        onDelete(option) {\n            this.$refs.listing.deleteItem(option);\n            this.getList();\n        },\n    }\n};\n","export default \"{% block payone_notification_target_list %}\\n    <sw-page class=\\\"sw-review-list\\\">\\n\\n        {% block payone_notification_target_list_smart_bar_header %}\\n            <template #smart-bar-header>\\n                {% block payone_notification_target_list_smart_bar_header_title %}\\n                    <h2>\\n\\n                        {% block payone_notification_target_list_smart_bar_header_title_text %}\\n                            {{ $tc('payonePayment.notificationTarget.list.title') }}\\n                        {% endblock %}\\n\\n                        {% block payone_notification_target_list_smart_bar_header_amount %}\\n                            <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                ({{ items.total }})\\n                            </span>\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block payone_notification_target_list_actions %}\\n            <template #smart-bar-actions>\\n                {% block payone_notification_target_list_smart_bar_actions %}\\n                    <sw-button\\n                        :routerLink=\\\"{ name: 'payone.notification.target.create' }\\\"\\n                        variant=\\\"primary\\\">\\n                        {{ $tc('payonePayment.notificationTarget.list.buttonCreate') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block payone_notification_target_list_content %}\\n            <template #content>\\n\\n                {% block payone_notification_target_list_content_list %}\\n                    <sw-entity-listing\\n                        v-if=\\\"items\\\"\\n                        ref=\\\"payoneNotificationTargetGrid\\\"\\n                        detailRoute=\\\"payone.notification.target.detail\\\"\\n                        :limit=\\\"criteriaLimit\\\"\\n                        :repository=\\\"repository\\\"\\n                        :columns=\\\"notificationTargetColumns\\\"\\n                        :items=\\\"items\\\"\\n                        @column-sort=\\\"onSortColumn\\\"\\n                        :disableDataFetching=\\\"true\\\"\\n                        :sortBy=\\\"sortBy\\\"\\n                        :showSelection=\\\"false\\\"\\n                        :allowInlineEdit=\\\"false\\\"\\n                        :sortDirection=\\\"sortDirection\\\"\\n                        identifier=\\\"payone-notification-target-list\\\">\\n\\n                        {% block payone_notification_target_list_grid_columns %}\\n                            {% block payone_notification_target_list_grid_columns_url %}\\n                                <template #column-url=\\\"{ item }\\\">\\n                                    <router-link :to=\\\"{ name: 'payone.notification.target.detail', params: { id: item.id } }\\\">\\n                                        {{ item.url  }}\\n                                    </router-link>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block payone_notification_target_list_grid_columns_is_basic_auth %}\\n                                <template #column-isBasicAuth=\\\"{ item }\\\">\\n                                    <sw-icon v-if=\\\"item.isBasicAuth\\\" name=\\\"regular-checkmark-xs\\\" small class=\\\"is--active\\\"></sw-icon>\\n                                    <sw-icon v-else name=\\\"regular-times-s\\\" small class=\\\"is--inactive\\\"></sw-icon>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block payone_notification_target_list_grid_columns_txactions %}\\n                                <template #column-txactions=\\\"{ item }\\\">\\n                                    {{ renderTxactions(item.txactions) }}\\n                                </template>\\n                            {% endblock %}\\n                        {% endblock %}\\n                    </sw-entity-listing>\\n                {% endblock %}\\n\\n                {% block payone_notification_target_list_empty_state %}\\n                    <sw-empty-state v-if=\\\"!isLoading && !total\\\"\\n                                    icon=\\\"default-documentation-file\\\"\\n                                    :title=\\\"$tc('payonePayment.notificationTarget.list.empty')\\\">\\n                    </sw-empty-state>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block payone_notification_target_list_sidebar %}\\n            <template #sidebar>\\n                <sw-sidebar>\\n\\n                    {% block payone_notification_target_list_sidebar_refresh %}\\n                        <sw-sidebar-item\\n                            icon=\\\"default-arrow-360-left\\\"\\n                            :title=\\\"$tc('sw-review.list.titleSidebarItemRefresh')\\\"\\n                            @click=\\\"onRefresh\\\">\\n                        </sw-sidebar-item>\\n                    {% endblock %}\\n                </sw-sidebar>\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";"],"names":["Mixin","Data","Criteria","Shopware","template","inject","mixins","getByName","data","isLoading","items","sortBy","criteriaLimit","criteriaPage","limit","metaInfo","title","$createTitle","computed","notificationTargetColumns","dataIndex","property","label","primary","repository","repositoryFactory","create","criteria","created","createdComponent","methods","renderTxactions","content","length","join","getList","context","Context","api","inheritance","search","then","total","result","onDelete","option","$refs","listing","deleteItem"],"sourceRoot":""}