(this["webpackJsonpPluginpayone-payment"]=this["webpackJsonpPluginpayone-payment"]||[]).push([[11],{iYdl:function(e,t,o){"use strict";o.r(t);var n=Shopware.Data.Criteria;t.default={template:'{% block payone_payment_order_action_log %}\n    <sw-card\n            class="payone-payment-order-action-log-card"\n            position-identifier="payone-payment-order-action-log-card"\n            :title="$tc(\'sw-order.payone-payment.orderActionLog.cardTitle\')"\n    >\n        <sw-data-grid\n                v-if="orderActionLogs.length > 0"\n                :showSelection="false"\n                :dataSource="orderActionLogs"\n                :columns="orderActionLogColumns"\n                :isLoading="isLoading"\n        >\n            <template #column-amount="{ item }">\n                {{ (item.amount / 100) | currency(order.currency.isoCode) }}\n            </template>\n\n            <template #column-requestDateTime="{ item }">\n                {{ item.requestDateTime | date }}\n            </template>\n\n            <template #actions="{ item }">\n                <sw-context-menu-item @click="openRequest(item)">\n                    {{ $tc(\'sw-order.payone-payment.orderActionLog.contextMenu.openRequestDetails\') }}\n                </sw-context-menu-item>\n                <sw-context-menu-item @click="openResponse(item)">\n                    {{ $tc(\'sw-order.payone-payment.orderActionLog.contextMenu.openResponseDetails\') }}\n                </sw-context-menu-item>\n            </template>\n\n            <template #action-modals="{ item }">\n                <sw-modal\n                        v-if="showRequestDetails"\n                        :title="$tc(\'sw-order.payone-payment.orderActionLog.requestDetailsModal.title\')"\n                        variant="large"\n                        @modal-close="onCloseRequestModal"\n                >\n                    <sw-button variant="primary" @click="downloadAsTxt(showRequestDetails, \'request\', item.transactionId)">\n                        {{ $tc(\'sw-order.payone-payment.orderActionLog.requestDetailsModal.downloadButton\') }}\n                    </sw-button>\n                    <sw-data-grid\n                            :showSelection="false"\n                            :showActions="false"\n                            :dataSource="toKeyValueSource(showRequestDetails)"\n                            :columns="keyValueColumns"\n                            :isLoading="isLoading"\n                    >\n                    </sw-data-grid>\n                </sw-modal>\n                <sw-modal\n                        v-if="showResponseDetails"\n                        :title="$tc(\'sw-order.payone-payment.orderActionLog.responseDetailsModal.title\')"\n                        variant="large"\n                        @modal-close="onCloseResponseModal"\n                >\n                    <sw-button variant="primary" @click="downloadAsTxt(showResponseDetails, \'response\', item.transactionId)">\n                        {{ $tc(\'sw-order.payone-payment.orderActionLog.responseDetailsModal.downloadButton\') }}\n                    </sw-button>\n                    <sw-data-grid\n                            :showSelection="false"\n                            :showActions="false"\n                            :dataSource="toKeyValueSource(showResponseDetails)"\n                            :columns="keyValueColumns"\n                            :isLoading="isLoading"\n                    >\n                    </sw-data-grid>\n                </sw-modal>\n            </template>\n        </sw-data-grid>\n\n        <sw-empty-state\n                v-else\n                :absolute="false"\n                :title="$tc(\'sw-order.payone-payment.orderActionLog.emptyState.title\')"\n                :subline="$tc(\'sw-order.payone-payment.orderActionLog.emptyState.subline\')"\n        >\n            <template #icon>\n                <img\n                        :src="\'/administration/static/img/empty-states/order-empty-state.svg\' | asset"\n                        :alt="$tc(\'sw-order.payone-payment.orderActionLog.emptyState.title\')"\n                >\n            </template>\n        </sw-empty-state>\n    </sw-card>\n{% endblock %}\n',inject:["repositoryFactory"],props:{order:{type:Object,required:!0}},data:function(){return{orderActionLogs:[],isLoading:!1,showRequestDetails:null,showResponseDetails:null}},computed:{orderActionLogRepository:function(){return this.repositoryFactory.create("payone_payment_order_action_log")},orderActionLogColumns:function(){return[{property:"transactionId",label:this.$tc("sw-order.payone-payment.orderActionLog.columnTitleTransactionId")},{property:"request",label:this.$tc("sw-order.payone-payment.orderActionLog.columnTitleRequest")},{property:"response",label:this.$tc("sw-order.payone-payment.orderActionLog.columnTitleResponse")},{property:"amount",label:this.$tc("sw-order.payone-payment.orderActionLog.columnTitleAmount")},{property:"requestDateTime",label:this.$tc("sw-order.payone-payment.orderActionLog.columnTitleRequestDateTime")}]},keyValueColumns:function(){return[{property:"key",label:this.$tc("sw-order.payone-payment.orderActionLog.columnTitleKey")},{property:"value",label:this.$tc("sw-order.payone-payment.orderActionLog.columnTitleValue")}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.getOrderActionLogs()},reloadActionLogs:function(){this.getOrderActionLogs()},getOrderActionLogs:function(){var e=this,t=new n;return t.addFilter(n.equals("orderId",this.order.id)),t.addSorting(n.sort("requestDateTime","ASC",!0)),this.isLoading=!0,this.orderActionLogRepository.search(t,Shopware.Context.api).then((function(t){e.orderActionLogs=t,e.isLoading=!1}))},openRequest:function(e){this.showRequestDetails=e.requestDetails},openResponse:function(e){this.showResponseDetails=e.responseDetails},onCloseRequestModal:function(){this.showRequestDetails=null},onCloseResponseModal:function(){this.showResponseDetails=null},toKeyValueSource:function(e){var t=[];for(var o in e)t.push({key:o,value:e[o]});return t.sort((function(e,t){return e.key.localeCompare(t.key)})),t},downloadAsTxt:function(e,t,o){var n=document.createElement("a");n.href="data:text/plain;charset=utf-8,"+encodeURIComponent(JSON.stringify(e,null,4)),n.download="PAYONE-".concat(t,"-").concat(o,".txt"),n.dispatchEvent(new MouseEvent("click")),n.remove()}}}}}]);