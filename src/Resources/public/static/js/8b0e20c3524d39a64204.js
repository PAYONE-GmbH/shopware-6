(window["webpackJsonpPluginpayone-payment"]=window["webpackJsonpPluginpayone-payment"]||[]).push([[651],{289:function(){},651:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return i}}),n(544);let{Mixin:a,Filter:r}=Shopware,{Criteria:o}=Shopware.Data;var i={template:'{% block payone_payment_management %}\n    <div class="payone-payment-management">\n        <template v-for="(transaction, index) in payoneTransactions">\n            <sw-card class="payone-payment-management-card" position-identifier="payone-payment-management-card" :title="index === 0 ? $tc(\'sw-order.payone-payment.general.cardTitle\') : \'\'">\n                <sw-container columns="1fr 1fr">\n                    <sw-container>\n                        <sw-description-list>\n                            <dt>{{ $tc(\'sw-order.payone-payment.paymentMethod\') }}</dt>\n                            <dd class="sw-order-base__label-sales-channel">{{ transaction.paymentMethod.translated.distinguishableName }}</dd>\n\n                            <template v-if="getPayoneCardType(transaction)">\n                                <dt>{{ $tc(\'sw-order.payone-payment.creditCard.cardTypeLabel\') }}</dt>\n                                <dd class="sw-order-base__label-sales-channel">{{ getPayoneCardType(transaction) }}</dd>\n                            </template>\n\n                            <dt>{{ $tc(\'sw-order.payone-payment.txid\') }}</dt>\n                            <dd class="sw-order-base__label-sales-channel">{{ transaction.extensions.payonePaymentOrderTransactionData.transactionId }}</dd>\n\n                            <dt>{{ $tc(\'sw-order.payone-payment.sequenceNumber.label\') }}</dt>\n                            <dd class="sw-order-base__label-sales-channel">\n                                    <span v-if="transaction.extensions.payonePaymentOrderTransactionData.sequenceNumber == -1">\n                                        {{ $tc(\'sw-order.payone-payment.sequenceNumber.empty\') }}\n                                    </span>\n                                <span v-else>\n                                        {{ transaction.extensions.payonePaymentOrderTransactionData.sequenceNumber }}\n                                    </span>\n                            </dd>\n\n                            <dt>{{ $tc(\'sw-order.payone-payment.transactionState\') }}</dt>\n                            <dd class="sw-order-base__label-sales-channel" v-if="isActiveTransaction(transaction)">{{ transaction.extensions.payonePaymentOrderTransactionData.transactionState }}</dd>\n                            <dd class="sw-order-base__label-sales-channel" v-else>{{ $tc(\'sw-order.payone-payment.transactionCancelled\') }}</dd>\n                        </sw-description-list>\n                    </sw-container>\n\n                    <sw-container gap="30px" v-if="acl.can(\'Payone.payone_order_management\') && isActiveTransaction(transaction)">\n                        <payone-capture-button :order="order" :transaction="transaction" v-on:reload="reloadEntityData"></payone-capture-button>\n                        <payone-refund-button :order="order" :transaction="transaction" v-on:reload="reloadEntityData"></payone-refund-button>\n                    </sw-container>\n                </sw-container>\n\n                <sw-container v-if="acl.can(\'payone_payment_notification_forward:read\') && hasNotificationForwards(transaction)" gap="10px" class="payone-payment-management-notification-forwards">\n                    <b>{{ $tc(\'payonePayment.notificationTarget.list.title\') }}</b>\n\n                    <sw-data-grid\n                            :dataSource="notificationForwards"\n                            :selectable="false"\n                            :isFullpage="false"\n                            :showSelection="false"\n                            :compactMode="true"\n                            :showActions="true"\n                            :allowInlineEdit="false"\n                            :columns="notificationTargetColumns"\n                            :plainAppearance="true"\n                            :showHeader="false"\n                            table>\n\n                        <template #column-updatedAt="{ item }">\n                            {{ dateFilter(item.updatedAt, { hour: \'2-digit\', minute: \'2-digit\' }) }}\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    v-if="acl.can(\'payone_webhook_resend\')"\n                                    @click="requeue(item, transaction)">\n                                {{ $tc(\'payonePayment.notificationTarget.actions.requeue\') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                    </sw-data-grid>\n                </sw-container>\n            </sw-card>\n        </template>\n    </div>\n{% endblock %}\n',inject:["acl","PayonePaymentService","repositoryFactory"],mixins:[a.getByName("notification")],props:{order:{type:Object,required:!0}},data(){return{notificationForwards:null}},computed:{dateFilter(){return r.getByName("date")},payoneTransactions:function(){return this.order.transactions.filter(e=>this.isPayoneTransaction(e)).sort((e,t)=>e.createdAt<t.createdAt?1:e.createdAt>t.createdAt?-1:0)},notificationForwardRepository(){return this.repositoryFactory.create("payone_payment_notification_forward")},notificationTargetColumns(){return[{property:"txaction",type:"text",width:"100px"},{property:"notificationTarget.url",type:"text"},{property:"response",width:"100px"},{property:"updatedAt",align:"right",type:"date"}]}},methods:{isPayoneTransaction(e){return!!e.extensions&&!!e.extensions.payonePaymentOrderTransactionData&&!!e.extensions.payonePaymentOrderTransactionData.transactionId&&e.extensions.payonePaymentOrderTransactionData.transactionId},isActiveTransaction(e){return"cancelled"!==e.stateMachineState.technicalName},hasNotificationForwards(e){return null===this.notificationForwards?(this.getNotificationForwards(e),!1):this.notificationForwards.length>0},getNotificationForwards(e){let t=new o;return t.addAssociation("notificationTarget"),t.addSorting(o.sort("updatedAt","DESC",!0)),t.addFilter(o.equals("transactionId",e.id)),t.setLimit(500),this.notificationForwardRepository.search(t,Shopware.Context.api).then(e=>{this.notificationForwards=e})},requeue(e,t){let n={notificationForwardId:e.id};this.PayonePaymentService.requeueNotificationForward(n).then(()=>{this.createNotificationSuccess({title:this.$tc("payonePayment.notificationTarget.actions.requeue"),message:this.$tc("payonePayment.notificationTarget.messages.success")}),this.getNotificationForwards(t)}).catch(e=>{this.createNotificationError({title:this.$tc("payonePayment.notificationTarget.actions.requeue"),message:e.message})}).finally(()=>{this.$nextTick().then(()=>{this.$emit("reload")})})},reloadEntityData(){this.$emit("reload-entity-data")},getPayoneCardType(e){let t=e.extensions.payonePaymentOrderTransactionData?.additionalData?.card_type;return t?this.$tc("sw-order.payone-payment.creditCard.cardTypes."+t):null}}}},544:function(e,t,n){var a=n(289);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),n(346).Z("360f7fbc",a,!0,{})},346:function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},r=0;r<t.length;r++){var o=t[r],i=o[0],s={id:e+":"+r,css:o[1],media:o[2],sourceMap:o[3]};a[i]?a[i].parts.push(s):n.push(a[i]={id:i,parts:[s]})}return n}n.d(t,{Z:function(){return m}});var r="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!r)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},i=r&&(document.head||document.getElementsByTagName("head")[0]),s=null,c=0,d=!1,l=function(){},p=null,u="data-vue-ssr-id",y="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,t,n,r){d=n,p=r||{};var i=a(e,t);return f(i),function(t){for(var n=[],r=0;r<i.length;r++){var s=o[i[r].id];s.refs--,n.push(s)}t?f(i=a(e,t)):i=[];for(var r=0;r<n.length;r++){var s=n[r];if(0===s.refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete o[s.id]}}}}function f(e){for(var t=0;t<e.length;t++){var n=e[t],a=o[n.id];if(a){a.refs++;for(var r=0;r<a.parts.length;r++)a.parts[r](n.parts[r]);for(;r<n.parts.length;r++)a.parts.push(w(n.parts[r]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{for(var i=[],r=0;r<n.parts.length;r++)i.push(w(n.parts[r]));o[n.id]={id:n.id,refs:1,parts:i}}}}function h(){var e=document.createElement("style");return e.type="text/css",i.appendChild(e),e}function w(e){var t,n,a=document.querySelector("style["+u+'~="'+e.id+'"]');if(a){if(d)return l;a.parentNode.removeChild(a)}if(y){var r=c++;t=v.bind(null,a=s||(s=h()),r,!1),n=v.bind(null,a,r,!0)}else t=b.bind(null,a=h()),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){a?(a.css!==e.css||a.media!==e.media||a.sourceMap!==e.sourceMap)&&t(e=a):n()}}var g=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function v(e,t,n,a){var r=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=g(t,r);else{var o=document.createTextNode(r),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(o,i[t]):e.appendChild(o)}}function b(e,t){var n=t.css,a=t.media,r=t.sourceMap;if(a&&e.setAttribute("media",a),p.ssrId&&e.setAttribute(u,t.id),r&&(n+="\n/*# sourceURL="+r.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}}]);