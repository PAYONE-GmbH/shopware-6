(window["webpackJsonpPluginpayone-payment"]=window["webpackJsonpPluginpayone-payment"]||[]).push([[899],{309:function(){},899:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return s}}),t(342);let{Mixin:a}=Shopware;var s={template:'{% block payone_payment %}\n<sw-page class="payone-payment">\n    {% block payone_payment_header %}\n    <template #smart-bar-header>\n        <h2>\n            {{ $tc(\'sw-settings.index.title\') }}\n            <sw-icon name="regular-chevron-right-xs" small></sw-icon>\n            {{ $tc(\'payone-payment.title\') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    {% block payone_payment_actions %}\n    <template #smart-bar-actions>\n        {% block payone_payment_settings_actions_feedback %}\n        <sw-button\n                @click="isSupportModalOpen = true"\n                :disabled="false"\n                variant="ghost"\n                :square="false"\n                :block="false"\n                :isLoading="false">\n            {{ $tc(\'payone-payment.supportModal.menuButton\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block payone_payment_settings_actions_notification_forward_target %}\n            <sw-button\n                :routerLink="{ name: \'payone.notification.target.list\' }"\n                :disabled="false"\n                variant="ghost"\n                :square="false"\n                :block="false"\n                :isLoading="false"\n                v-if="acl.can(\'payone_payment_notification_target:read\')"\n            >\n                {{ $tc(\'payonePayment.notificationTarget.module.buttonTitle\') }}\n            </sw-button>\n        {% endblock %}\n\n        {% block payone_payment_settings_actions_test %}\n        <sw-button-process @click="onTest"\n                           :isLoading="isTesting"\n                           :processSuccess="isTestSuccessful"\n                           :disabled="isLoading">\n            {{ $tc(\'payone-payment.settingsForm.test\') }}\n        </sw-button-process>\n        {% endblock %}\n\n        {% block payone_payment_settings_actions_save %}\n        <sw-button-process\n                class="sw-settings-login-registration__save-action"\n                :isLoading="isLoading"\n                :processSuccess="isSaveSuccessful"\n                :disabled="isLoading || isTesting"\n                variant="primary"\n                @process-finish="saveFinish"\n                @click="onSave">\n            {{ $tc(\'payone-payment.settingsForm.save\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    {% block payone_payment_settings_content %}\n    <template #content>\n        <sw-modal\n                v-if="isSupportModalOpen"\n                @modal-close="isSupportModalOpen = false"\n                :title="$tc(\'payone-payment.supportModal.title\')"\n                class="payone-feedback sw-modal--large">\n            <sw-container columns="1fr 1fr 1fr 1fr">\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-file-text" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.documentation.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="https://docs.payone.com/display/public/INT/Shopware+6+Plugin">\n                        {{ $tc(\'payone-payment.supportModal.documentation.button\') }}\n                    </sw-button>\n                </div>\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-headset" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.support.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="mailto:tech.support@payone.com">\n                        {{ $tc(\'payone-payment.supportModal.support.button\') }}\n                    </sw-button>\n                </div>\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-code" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.repository.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="https://github.com/PAYONE-GmbH/shopware-6">\n                        {{ $tc(\'payone-payment.supportModal.repository.button\') }}\n                    </sw-button>\n                </div>\n                <div class="payone-feedback__col">\n                    <div class="payone-feedback__text">\n                        <div class="payone-feedback__icon">\n                            <sw-icon name="regular-fingerprint" large="true"></sw-icon>\n                        </div>\n                        <p class="payone-feedback__desc">\n                            {{ $tc(\'payone-payment.supportModal.testdata.description\') }}\n                        </p>\n                    </div>\n                    <sw-button\n                            :disabled="false"\n                            variant="primary"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            link="https://www.payone.com/DE-de/kampagne/ecom-testaccount">\n                        {{ $tc(\'payone-payment.supportModal.testdata.button\') }}\n                    </sw-button>\n                </div>\n            </sw-container>\n        </sw-modal>\n\n        <sw-card-view>\n            <payone-payment-settings\n                    class="payone-config__wrapper"\n                    ref="systemConfig"\n                    sales-channel-switchable\n                    inherit\n                    domain="PayonePayment.settings">\n\n                <template #beforeElements="{card, config}">\n                    <div v-if="card.setShowFields !== undefined" class="payone-config__collapsible-container" v-bind:class="{\'collapsed\': !card.showFields}" >\n                        <a class="payone-config__collapsible-handle" @click="card.setShowFields(!card.showFields)">\n                            <sw-icon small v-if="!card.showFields" name="regular-chevron-down-xxs" class="payone-config__collapsible-handle-open"></sw-icon>\n                            <sw-icon small v-if="card.showFields" name="regular-chevron-up-xxs" class="payone-config__collapsible-handle-close"></sw-icon>\n                        </a>\n                    </div>\n\n                    <sw-alert v-if="card.showFields && card.name === \'payment_apple_pay\' && !isApplePayCertConfigured"\n                              variant="info" appearance="default" :showIcon="true" :closable="false">\n                        <span v-html="$tc(\'payone-payment.applePay.cert.notification\')"></span>\n                    </sw-alert>\n                </template>\n            </payone-payment-settings>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',mixins:[a.getByName("notification"),a.getByName("sw-inline-snippet")],inject:["PayonePaymentSettingsService","acl"],data(){return{isLoading:!1,isTesting:!1,isSaveSuccessful:!1,isTestSuccessful:!1,isApplePayCertConfigured:!0,isSupportModalOpen:!1,stateMachineTransitionActions:[],displayStatusMapping:{}}},created(){this.createdComponent()},metaInfo(){return{title:this.$createTitle()}},methods:{createdComponent(){this.PayonePaymentSettingsService.hasApplePayCert().then(e=>{this.isApplePayCertConfigured=e})},saveFinish(){this.isSaveSuccessful=!1},testFinish(){this.isTestSuccessful=!1},getConfigValue(e){let n=this.$refs.systemConfig.actualConfigData,t=n.null,a=this.$refs.systemConfig.currentSalesChannelId;return null===a?n.null[`PayonePayment.settings.${e}`]:n[a][`PayonePayment.settings.${e}`]||t[`PayonePayment.settings.${e}`]},getPaymentConfigValue(e,n){let t=e.charAt(0).toUpperCase()+e.slice(1);return this.getConfigValue(n+t)||this.getConfigValue(e)},onSave(){this.isSaveSuccessful=!1,this.isLoading=!0,this.$refs.systemConfig.saveAll().then(e=>{this.handleRatepayProfileUpdates(e),this.isSaveSuccessful=!0}).finally(()=>{this.isLoading=!1})},onTest(){this.isTesting=!0,this.isTestSuccessful=!1;let e={};this.$refs.systemConfig.config.forEach(n=>{let t=n.name.match(/^payment_(.+)$/),a=t?t[1]:null;a&&(e[a]={merchantId:this.getPaymentConfigValue("merchantId",a),accountId:this.getPaymentConfigValue("accountId",a),portalId:this.getPaymentConfigValue("portalId",a),portalKey:this.getPaymentConfigValue("portalKey",a)})}),this.PayonePaymentSettingsService.validateApiCredentials(e).then(e=>{let n=e.testCount,t=e.credentialsValid,a=e.errors;if(t)this.createNotificationSuccess({title:this.$tc("payone-payment.settingsForm.titleSuccess"),message:n>0?this.$tc("payone-payment.settingsForm.messageTestSuccess"):this.$tc("payone-payment.settingsForm.messageTestNoTestedPayments")}),this.isTestSuccessful=!0;else for(let e in a)if(a.hasOwnProperty(e)){this.createNotificationError({title:this.$tc("payone-payment.settingsForm.titleError"),message:this.$tc("payone-payment.settingsForm.messageTestError."+e)});let n=a[e];"string"==typeof n&&this.createNotificationError({title:this.$tc("payone-payment.settingsForm.titleError"),message:n})}}).catch(e=>{this.createNotificationError({title:this.$tc("payone-payment.settingsForm.titleError"),message:this.$tc("payone-payment.settingsForm.messageTestError.general")})}).finally(()=>{this.isTesting=!1})},handleRatepayProfileUpdates(e){let n=this.$refs.systemConfig.currentSalesChannelId;if(e.payoneRatepayProfilesUpdateResult&&e.payoneRatepayProfilesUpdateResult[n]){let t=e.payoneRatepayProfilesUpdateResult[n];this.$root.$emit("payone-ratepay-profiles-update-result",t),Array.isArray(t.errors)||this.createNotificationError({title:this.$tc("payone-payment.settingsForm.titleError"),message:this.$tc("payone-payment.settingsForm.messageSaveError.ratepayProfilesUpdateFailed")})}}}}},342:function(e,n,t){var a=t(309);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),t(346).Z("5227a589",a,!0,{})},346:function(e,n,t){"use strict";function a(e,n){for(var t=[],a={},s=0;s<n.length;s++){var i=n[s],o=i[0],r={id:e+":"+s,css:i[1],media:i[2],sourceMap:i[3]};a[o]?a[o].parts.push(r):t.push(a[o]={id:o,parts:[r]})}return t}t.d(n,{Z:function(){return y}});var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},o=s&&(document.head||document.getElementsByTagName("head")[0]),r=null,l=0,c=!1,p=function(){},d=null,u="data-vue-ssr-id",f="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function y(e,n,t,s){c=t,d=s||{};var o=a(e,n);return m(o),function(n){for(var t=[],s=0;s<o.length;s++){var r=i[o[s].id];r.refs--,t.push(r)}n?m(o=a(e,n)):o=[];for(var s=0;s<t.length;s++){var r=t[s];if(0===r.refs){for(var l=0;l<r.parts.length;l++)r.parts[l]();delete i[r.id]}}}}function m(e){for(var n=0;n<e.length;n++){var t=e[n],a=i[t.id];if(a){a.refs++;for(var s=0;s<a.parts.length;s++)a.parts[s](t.parts[s]);for(;s<t.parts.length;s++)a.parts.push(h(t.parts[s]));a.parts.length>t.parts.length&&(a.parts.length=t.parts.length)}else{for(var o=[],s=0;s<t.parts.length;s++)o.push(h(t.parts[s]));i[t.id]={id:t.id,refs:1,parts:o}}}}function g(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function h(e){var n,t,a=document.querySelector("style["+u+'~="'+e.id+'"]');if(a){if(c)return p;a.parentNode.removeChild(a)}if(f){var s=l++;n=b.bind(null,a=r||(r=g()),s,!1),t=b.bind(null,a,s,!0)}else n=_.bind(null,a=g()),t=function(){a.parentNode.removeChild(a)};return n(e),function(a){a?(a.css!==e.css||a.media!==e.media||a.sourceMap!==e.sourceMap)&&n(e=a):t()}}var v=function(){var e=[];return function(n,t){return e[n]=t,e.filter(Boolean).join("\n")}}();function b(e,n,t,a){var s=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=v(n,s);else{var i=document.createTextNode(s),o=e.childNodes;o[n]&&e.removeChild(o[n]),o.length?e.insertBefore(i,o[n]):e.appendChild(i)}}function _(e,n){var t=n.css,a=n.media,s=n.sourceMap;if(a&&e.setAttribute("media",a),d.ssrId&&e.setAttribute(u,n.id),s&&(t+="\n/*# sourceURL="+s.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}}]);