{% block payone_payment_management %}
    <div class="payone-payment-management">
        <template v-for="(transaction, index) in payoneTransactions">
            <sw-card class="payone-payment-management-card" position-identifier="payone-payment-management-card" :title="index === 0 ? $tc('sw-order.payone-payment.title') : ''">
                <sw-container columns="1fr 1fr">
                    <sw-container>
                        <sw-description-list>
                            <dt>{{ $tc('sw-order.payone-payment.paymentMethod') }}</dt>
                            <dd class="sw-order-base__label-sales-channel">{{ transaction.paymentMethod.translated.distinguishableName }}</dd>

                            <template v-if="getPayoneCardType(transaction)">
                                <dt>{{ $tc('sw-order.payone-payment.creditCard.cardTypeLabel') }}</dt>
                                <dd class="sw-order-base__label-sales-channel">{{ getPayoneCardType(transaction) }}</dd>
                            </template>

                            <dt>{{ $tc('sw-order.payone-payment.txid') }}</dt>
                            <dd class="sw-order-base__label-sales-channel">{{ transaction.extensions.payonePaymentOrderTransactionData.transactionId }}</dd>

                            <dt>{{ $tc('sw-order.payone-payment.sequenceNumber.label') }}</dt>
                            <dd class="sw-order-base__label-sales-channel">
                                    <span v-if="transaction.extensions.payonePaymentOrderTransactionData.sequenceNumber == -1">
                                        {{ $tc('sw-order.payone-payment.sequenceNumber.empty') }}
                                    </span>
                                <span v-else>
                                        {{ transaction.extensions.payonePaymentOrderTransactionData.sequenceNumber }}
                                    </span>
                            </dd>

                            <dt>{{ $tc('sw-order.payone-payment.transactionState') }}</dt>
                            <dd class="sw-order-base__label-sales-channel" v-if="isActiveTransaction(transaction)">{{ transaction.extensions.payonePaymentOrderTransactionData.transactionState }}</dd>
                            <dd class="sw-order-base__label-sales-channel" v-else>{{ $tc('sw-order.payone-payment.transactionCancelled') }}</dd>
                        </sw-description-list>
                    </sw-container>

                    <sw-container gap="30px" v-if="isActiveTransaction(transaction) && can('Payone.payone_order_management')">
                        <payone-capture-button :order="order" :transaction="transaction" v-on:reload="reloadEntityData"></payone-capture-button>
                        <payone-refund-button :order="order" :transaction="transaction" v-on:reload="reloadEntityData"></payone-refund-button>
                    </sw-container>
                </sw-container>

                <sw-container v-if="hasNotificationForwards(transaction)" gap="10px" class="payone-payment-management-notification-forwards">
                    <b>{{ $tc('payonePayment.notificationTarget.list.title') }}</b>

                    <sw-data-grid
                            :dataSource="notificationForwards"
                            :selectable="false"
                            :isFullpage="false"
                            :showSelection="false"
                            :compactMode="true"
                            :showActions="true"
                            :allowInlineEdit="false"
                            :columns="notificationTargetColumns"
                            :plainAppearance="true"
                            :showHeader="false"
                            table>

                        <template #column-response="{ item }">
                            <span v-if="item.updatedAt">{{ item.response }}</span>
                            <span v-else></span>
                        </template>

                        <template #column-updatedAt="{ item }">
                            {{ item.updatedAt| date({ hour: '2-digit', minute: '2-digit' }) }}
                        </template>

                        <template #actions="{ item }">
                            <sw-context-menu-item
                                    @click="requeue(item, transaction)">
                                {{ $tc('payonePayment.notificationTarget.actions.requeue') }}
                            </sw-context-menu-item>
                        </template>

                    </sw-data-grid>
                </sw-container>
            </sw-card>
        </template>
    </div>
{% endblock %}
